// Code generated for package gui by go-bindata DO NOT EDIT. (@generated)
// sources:
// cmd/gui/web-app/app/main.js
// cmd/gui/web-app/app/pages/home/home.html
// cmd/gui/web-app/app/pages/home/home.js
// cmd/gui/web-app/app/pages/projects/projects.html
// cmd/gui/web-app/app/pages/projects/projects.js
// cmd/gui/web-app/app/pages/versions/versions.html
// cmd/gui/web-app/app/pages/versions/versions.js
// cmd/gui/web-app/core/component.js
// cmd/gui/web-app/core/view.js
// cmd/gui/web-app/index.html
// cmd/gui/web-app/styles/dark-theme.css
// cmd/gui/web-app/styles/main.css
package gui

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"net/http"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}


type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var _appMainJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\x71\x15\x82\x82\x42\x3c\xb9\xdb\x63\x02\x6d\xc8\x82\x75\x2d\xd0\x00\xc1\x92\xf4\x25\x08\x10\x5a\x3e\xc7\x4c\x68\x92\x23\x29\x27\x9e\xab\xff\x7d\x20\xf5\x8b\x94\x65\x6f\xeb\xc3\x02\x04\xb0\xa8\xef\x8e\xf7\x1d\xbf\x3b\x9e\x0a\x4e\x8d\x81\x0b\xa5\x60\x37\x01\x28\xa4\x30\x56\x97\x85\x95\x9a\x48\x65\x99\x14\x26\xf5\x2f\x00\xac\xde\x36\xbf\x00\xec\x8a\x99\xac\x28\xb5\x46\x61\x2f\xe5\x5a\x49\x81\xc2\x42\x0e\xa2\xe4\xfc\x3c\xc2\xd0\x62\x85\x8b\x0e\x62\x20\x87\x5d\x15\x21\xe6\xd4\xe0\x2d\xb3\x1c\x21\x87\xe4\xfe\xf7\x3f\xbe\x5c\x9d\xdd\x7d\x7e\x48\x62\x2f\x9d\xfd\x9d\xe6\xd7\x1a\x97\xec\xcd\xa1\xa9\x52\x33\x45\x9f\xd0\xcc\x62\xf8\x86\xe1\xeb\xa5\x14\x96\x32\x81\xfa\x06\x39\x3a\x3a\x90\x43\x43\x08\xde\xbf\x6f\x7f\x8e\x43\x23\x67\x6b\xca\xc4\x15\x8a\xf2\xb8\x9f\x21\x6a\x2f\x1e\x97\x1c\x7c\x85\xaf\x0c\x5f\xc9\x0e\x4c\x03\x3b\x3b\x16\x70\x95\x8e\x06\x02\x39\x2c\x64\x51\xae\x51\xd8\xec\xcf\x12\xf5\xb6\x35\x20\xa3\xf1\xc6\x4e\xb4\x2c\x2d\xba\x53\xb8\x6f\x56\x01\x76\xe0\x17\xcf\x20\x59\xc9\x35\x26\x53\xe0\x74\x8e\xfc\x0c\x92\x4f\xee\x11\xaa\xe9\x08\x52\x69\xf9\x8c\x85\x35\x01\xfa\xba\x5d\x1a\xb7\xd8\xa0\x36\x2e\x53\x81\xc5\xd7\x76\xa9\xb7\x78\x88\x8f\x5d\x23\xb5\xe8\xc8\x90\x98\x85\xa0\x1b\xf6\x44\x2d\x92\x3a\xe4\xe6\x65\x05\x05\xb5\xc5\x0a\x08\xa6\x9d\x50\x9d\x9e\x25\xc7\x0c\xb5\x96\x9a\x24\x4b\xca\x38\x2e\xc0\x4a\x60\x82\x59\x46\x39\xfb\x0b\x81\x2a\x95\x4c\x01\x5b\x2f\x13\xf7\x3f\x01\xa0\x66\x2b\x0a\xe8\xb6\x12\x74\xdd\xf9\xf5\x55\x52\x53\x83\x3c\x4c\x6c\xb6\x64\x62\x41\x88\x4e\x21\xff\x19\x74\xd6\x20\xf2\x1c\xbc\x75\xbd\x81\x41\xeb\xf5\x4e\x1e\x4f\x76\x71\x05\x54\x70\xb2\xab\x4d\x7e\xa9\x9d\x67\x3e\x55\x70\xe6\xcd\xab\xc7\xc6\x41\x27\x99\x8c\x09\x81\xfa\xd3\xed\xd5\x17\x57\x0d\x4d\x0d\x68\xb4\xa5\x16\x61\x02\xbb\xea\x23\x5d\x14\x01\xc1\x51\x4c\xc3\xb3\xf1\xe5\x84\x7b\xad\xe5\x9a\x19\x24\x44\xa3\x91\x7c\x83\x53\xd0\xe8\xce\xdb\x33\xed\xda\x42\xd0\x22\x00\xd8\x12\x6a\x49\x32\xd3\xb9\xbf\xf4\xfd\xa0\xde\x24\x0d\xb0\x6d\x4e\x8b\xa0\x99\x78\xdb\x27\x6c\x6c\x46\x58\xb4\x7f\x61\x42\x5c\x4c\xa4\xf3\x12\xc1\x9a\xc8\x47\xdf\x56\x80\xdc\x60\x14\x10\x47\x17\x4e\x29\x2c\xba\x9a\xff\xb0\xb7\xe1\xb0\xb5\xdd\xbb\xb8\x1e\x9a\x3a\xef\xa3\x75\xd8\xa9\x3f\xc0\x29\x24\x49\x14\x50\x43\x79\x85\xc5\xcb\x05\xe7\x1f\x19\xf7\x95\xe9\xe4\x1b\xe4\xb4\x85\xfa\x40\x4e\x4f\xcf\xa3\x65\x97\xe2\x2e\xc6\x1c\x7e\x4a\x07\x66\x23\xb9\x39\x12\x7b\x7a\x3e\x30\x6e\x33\xf6\xef\x6d\xaa\xe0\xa9\xda\x4b\xd9\x12\x6d\xb1\xea\x3c\x5c\x53\x5d\x1f\xe6\x14\x92\x67\x93\xa4\x99\x5d\xa1\x20\x91\x3b\xa7\x36\x25\x85\xf1\x29\x19\x63\x26\xc5\x4d\xa1\x99\xb2\x1f\x9d\x67\x5c\x1c\x8b\xd4\x29\xb6\x76\x36\x8d\x73\x9e\x4e\x27\x31\x69\x97\xa7\x60\x69\x5f\x6b\x87\x79\xac\xec\x9a\x7f\x2f\x13\x77\x37\xfc\x4f\x3c\xda\x63\x1a\x6b\x99\x47\x9a\x66\xdd\x2b\xfa\x22\x0d\xda\x66\xbf\x23\xe9\x97\xea\x6d\xaa\xbe\xe5\x44\x24\x9d\xd6\x3b\x57\x11\xab\x5a\xd1\x41\x19\x74\xb0\xcc\x25\x18\xf2\x0e\x0c\xdf\xbe\x75\x9d\xaf\x31\xab\xef\x8a\xea\xbc\xde\x2f\x92\xc7\x7f\xda\xd1\xd5\xa6\xd2\xb8\xb9\x29\xf4\xe1\x2b\xf7\x91\x2a\xf5\xc3\xc9\xae\x8f\x2f\xea\xd4\xae\x3c\xdf\x35\x3e\xe2\x3b\xc9\x82\x89\xdd\xd6\xa9\xfd\x8d\xa3\x7b\x22\x89\xf1\x61\xf7\xed\xc2\x14\x3a\xb3\x5b\xe5\x87\x24\x8b\x6f\x76\xf6\x4c\x37\xb4\x01\x45\x18\x7c\xb3\x41\x7a\xc2\x57\xcc\xd1\x3f\x10\x6f\x8b\xeb\xc2\x99\xcb\xc5\x36\xa3\x4a\xa1\x58\x5c\xae\x18\x5f\x10\x53\xe8\xe0\x82\x04\x98\xcd\x00\x37\x94\xf7\xb2\x3e\x1f\x1c\xd4\x92\xba\x04\x6d\x21\xaf\x71\x1d\xf7\x70\xe3\xac\x58\x51\x7d\x61\xc9\x87\x34\xb3\xf2\x4e\x29\xd4\x97\xd4\x20\x49\xe1\x74\x08\x34\xe5\xdc\x58\xcd\xc4\x13\xf9\x31\x9d\x04\x62\xee\x61\x4c\x18\x4b\x45\x81\x4d\x03\xde\x0b\x84\xa4\x07\x55\x52\x5f\x84\x07\x8b\x1a\xdf\xec\xe0\x42\xf4\x50\x72\x70\x34\x3d\xf5\xed\x1e\x4e\x21\x99\x25\xc1\x43\xe6\x1e\x9c\xb3\xa8\x3d\x44\x8d\xa1\x3b\x38\x7f\x90\x24\xa0\xea\xcb\xa7\x1f\x88\x3e\x5b\x5c\x13\x3f\x23\x34\xf3\x54\x3c\x9a\x70\x76\x44\x5b\x9c\x25\x5d\x2e\x1c\x78\x6e\xc5\x11\xf4\xbc\xb4\x56\x8a\xd6\x62\x6e\x45\x3d\x75\xdc\xd6\x42\xf3\x7b\xf7\xaf\xa4\x28\x38\x2b\x5e\x5c\x9d\x79\x3a\xf1\xb4\xe6\xe3\x6d\x1c\x71\x16\xc9\x6b\x6e\x45\x38\xdd\xb4\x43\x6c\x84\xe1\x6c\x2c\x13\xa4\x65\xbe\x94\xda\x55\x77\x3f\x99\xc9\x65\x38\x9a\xa5\x83\x8f\x97\x91\x54\x66\x4d\x42\x83\xd9\x6b\x38\x14\x1e\x18\x65\x62\x79\xbc\x7b\xf7\x8f\xa3\x8b\x77\x76\x08\xb0\x4f\xe8\x05\xb7\xc0\xc4\xf8\xdc\xd1\x13\x73\xed\xc6\x21\xdb\x81\xd3\x7d\xa0\x8c\x5f\x24\x2f\xb8\x7d\xf0\x85\x05\xed\x6c\x1a\xb4\xff\x68\x82\x1c\xb3\x1c\xb4\xf7\x96\xce\x1a\x8d\xa1\x4f\x48\x6c\x50\x30\xdf\x21\x47\x75\x04\xab\x5a\xa8\x8a\x66\x5f\xb7\xe3\xa8\xac\x54\x28\x2a\x63\xa9\x2d\xcd\xaf\x54\x8f\xab\xaa\x9a\xfc\x1d\x00\x00\xff\xff\x56\x98\x17\x2a\x0b\x0f\x00\x00")

func appMainJsBytes() ([]byte, error) {
	return bindataRead(
		_appMainJs,
		"app/main.js",
	)
}

func appMainJs() (*asset, error) {
	bytes, err := appMainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/main.js", size: 3851, mode: os.FileMode(420), modTime: time.Unix(1626035180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesHomeHomeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xc9\x48\x4d\x4c\x49\x2d\x52\x48\xce\x49\x2c\x2e\xb6\x55\x2a\xc9\x2c\xc9\x49\x55\xb2\xf3\xc8\xcf\x4d\xb5\xd1\x87\x48\xd9\x71\x71\xd9\xa4\x64\x96\x29\x64\xa6\xd8\x2a\x95\xe7\x17\x65\x17\x17\x24\x26\xa7\xea\x66\xe6\xa5\xe5\x17\x2b\xd9\x71\xd9\xe8\xa7\x64\x96\xd9\x29\x00\x02\x00\x00\xff\xff\x94\xde\xa8\xe5\x47\x00\x00\x00")

func appPagesHomeHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesHomeHomeHtml,
		"app/pages/home/home.html",
	)
}

func appPagesHomeHomeHtml() (*asset, error) {
	bytes, err := appPagesHomeHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/home/home.html", size: 71, mode: os.FileMode(420), modTime: time.Unix(1626028257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesHomeHomeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcd\x8e\xd3\x30\x10\xbe\xe7\x29\x46\xcb\xc1\x89\xb4\x78\x1f\x20\xca\x4a\x68\x05\xda\x03\x7f\x12\xdc\x10\x07\x93\x4c\x14\x83\x33\x0e\xf6\x78\x4b\x45\xfb\xee\xc8\xce\x4f\xdd\x52\xf5\x96\xf1\xf7\x33\x9f\xfd\xa5\x35\xca\x7b\x78\xb6\x23\xc2\xdf\x02\xa0\xb5\xe4\xd9\x85\x96\xad\x2b\xab\x74\x72\x2c\x0a\x00\x4d\x9a\x97\x19\x80\x07\xed\xe5\x8b\xc6\x1d\x34\xd0\xd9\x36\x8c\x48\x2c\x7f\x07\x74\xfb\x2f\x68\x30\x49\xc5\xab\x9d\x75\xbf\xfc\xa4\x5a\x7c\xad\xa9\xb7\x5e\x54\xf5\x49\xbb\x61\xd0\x40\xa0\x0e\x7b\x4d\xd8\xd5\xe7\xde\x52\x13\xa1\x7b\xfe\xfa\xe1\x3d\x34\x20\xc4\x8c\xf6\xc8\xed\x50\x8a\x07\x35\xe9\x87\xcd\x44\x54\x09\x03\x90\x3c\x20\x95\x0e\x3d\x34\x8f\xe0\xd0\xcb\x9f\xde\x52\x59\x9d\xc3\xd9\xee\xc7\xe5\x3e\x57\x73\x6d\xdf\xf5\x39\xa7\x75\xa8\x18\xdf\x69\x34\x5d\x29\x3e\xaa\x11\xd7\x9b\x5d\x67\x7c\x56\x3c\xdc\x66\xbc\x09\x3c\x58\x27\xee\x4f\x1b\xe5\x7c\x24\x49\x8d\xb8\x49\x8f\xe9\x2b\x95\x91\xcb\x23\xe7\x1e\x5e\x94\x09\xb8\xd6\x93\x2a\x84\x3e\xc2\x1e\x39\xef\x68\x16\xbe\x35\x18\xa7\xf2\x6e\xa5\xdc\x2d\x4b\x32\xb5\x51\x3f\xd0\xdc\x90\x26\x7c\xd5\xa5\x41\x32\xfe\xe1\x27\x4b\x8c\x14\x77\xc6\x5c\xff\xb9\x6a\x9a\xc2\xad\x40\x09\x5f\x5d\xd3\x20\x79\x3f\xc5\x36\x44\x74\x17\x39\xe0\x50\x75\x9f\xc8\xec\xa1\x01\x76\x01\x73\x28\xbd\x06\x34\xf3\xab\xc0\xe1\x70\x51\xee\xb7\x98\xed\x7b\x16\x6e\x7d\x07\xa9\xa6\x09\xa9\x7b\x1a\xb4\xe9\xca\x74\xa9\x25\xca\x55\x42\xda\x55\x5d\xfe\xb5\x39\x63\x95\x2d\x24\x87\x1c\x1c\x6d\x66\xa9\xce\xba\x38\xfe\x0b\x00\x00\xff\xff\xd0\x7c\x57\x04\x81\x03\x00\x00")

func appPagesHomeHomeJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesHomeHomeJs,
		"app/pages/home/home.js",
	)
}

func appPagesHomeHomeJs() (*asset, error) {
	bytes, err := appPagesHomeHomeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/home/home.js", size: 897, mode: os.FileMode(420), modTime: time.Unix(1626024543, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesProjectsProjectsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\xae\x83\x20\x10\x86\xf7\x9c\x82\xb0\x7a\x6f\x61\xb8\xc0\xc8\xa6\xfb\xc6\xc4\xf6\x00\x88\x24\xd2\x52\x30\x30\x2e\x8c\xf1\xee\xcd\x88\x4d\x8c\xee\xbe\x7c\xf3\x03\xf3\x03\x83\xd5\xbd\x4d\xdc\x78\x9d\x73\x2d\xd0\xa1\xb7\x42\x35\x29\xbe\xac\xc1\x0c\xb2\x8c\x15\x63\x80\xba\xf3\x96\xbb\xbe\x16\xe3\x3e\xad\xbc\xcb\x28\x14\xe3\x1c\x90\x72\x44\xc4\xa9\xc0\xa6\xd5\x5d\x7f\x2c\x48\x1c\x8e\xee\x99\xfc\x59\x35\x1a\x87\xb3\x7b\xcc\xe3\xe5\x68\x1b\xa7\x64\xec\x2d\x06\x4c\xf1\x70\x09\xc8\xf2\x2a\x99\x7d\x13\xc0\x2e\xf6\xf3\x75\xe1\x8a\xb4\xd8\xc3\xc4\x8a\x81\xdc\xca\x51\xcb\x6e\x42\x8c\x81\xc7\x60\xbc\x33\xef\x5a\x2c\x0b\xcf\x46\x87\xdf\x87\xfc\xfd\xf3\x75\x15\xaa\x35\x3a\x80\x2c\x59\xf5\x0d\x00\x00\xff\xff\x2e\xa9\xc5\x44\x43\x01\x00\x00")

func appPagesProjectsProjectsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesProjectsProjectsHtml,
		"app/pages/projects/projects.html",
	)
}

func appPagesProjectsProjectsHtml() (*asset, error) {
	bytes, err := appPagesProjectsProjectsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/projects/projects.html", size: 323, mode: os.FileMode(420), modTime: time.Unix(1626026163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesProjectsProjectsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x52\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x10\xdd\x41\x36\xd0\x3a\xf7\x15\xee\xa5\x18\xb0\xc3\x3e\x02\x24\x3b\x05\x3d\x68\x32\x33\xab\x50\x44\x8f\xa2\x97\x05\x6d\xfe\xfb\x60\x57\xb2\xad\xa2\xe8\x79\x27\x26\xf4\xe3\xe3\x7b\x4f\x34\x4e\x87\x00\x1b\xa6\x47\x34\x12\xe0\x69\x05\x60\xc8\x07\xe1\xde\x08\x71\x51\x8e\x1d\x00\x69\x6d\xa8\x0c\xb9\xfe\xe8\x03\xd4\xb0\x57\xdf\xf4\x11\xd5\x35\xa8\x1f\xec\x86\xb2\xd1\xd2\x0e\x75\x77\xee\xc6\xf6\x96\x7a\x36\x78\x4f\x5e\x98\x9c\x7a\xb8\x9d\x49\xba\xb4\xaa\x86\xfd\xd8\xbf\xac\x56\x00\xd6\x5b\xc9\x97\xfd\xb1\x78\x82\x1a\x1a\x32\xfd\x11\xbd\x54\xbf\x7b\xe4\xf3\x16\x1d\x8e\xba\xd4\x87\xc4\x73\xe3\x6c\x90\x9b\x9f\xd4\x9c\x55\xb9\x58\xf3\x0b\x25\x99\x2a\xca\xb4\x85\xd1\x37\xc8\x73\x3f\xee\x3b\x10\x43\x31\xba\x86\xc8\x0a\x74\xc8\xd5\x26\x68\x4c\x07\x98\x32\x71\x86\x51\x0b\x7e\x72\x38\xfc\x2b\x94\x70\xd2\x92\x91\x1b\x72\x13\x71\xcc\x72\xe6\x4d\xcc\x06\x9d\x7b\x8f\xba\x99\xa9\x61\x04\x57\x82\x7f\x65\x48\x1a\xbd\x40\x9d\x1c\xec\x0d\xb9\x87\x19\xc8\x74\xaa\x74\xd7\xa1\x6f\xee\x5b\xeb\x9a\x62\x18\x9c\x78\x2e\xb1\x4e\xb9\x67\x50\xa6\x53\x44\xbe\xe0\x18\xa5\x67\x9f\xc7\x33\xbd\xa3\x0e\x67\x6f\x20\x0b\x3f\x3a\x8c\x63\x07\x14\xd3\x16\x57\x6b\xdd\xd9\x75\x9a\xbe\x2a\xa3\x80\x4a\x5a\xf4\x05\x63\x80\xfa\x0e\x18\x43\xf5\x18\xc8\x17\x65\xfe\x79\x3e\xa0\xbb\x45\x78\xb3\x76\xeb\x3d\xf2\xe7\xdd\xd7\x2f\x50\x83\x52\xb7\x39\x62\x71\x7d\xd3\xcf\xe7\xe7\x78\x89\x0b\xdc\xeb\x4b\x99\xa2\x2a\x5f\x59\x0d\x46\xfb\xf7\xbd\xaa\xcc\xeb\x7a\x18\x50\xd7\xf0\x74\x44\x69\xa9\xf9\x08\x6a\xf3\x7d\xbb\x53\x97\xff\x2a\x82\xa8\x7f\xf9\xba\x2f\xe6\xdf\x12\xf9\x66\x5e\x31\xa6\xcb\xbf\x00\x00\x00\xff\xff\x8b\x03\x41\xb5\x5f\x04\x00\x00")

func appPagesProjectsProjectsJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesProjectsProjectsJs,
		"app/pages/projects/projects.js",
	)
}

func appPagesProjectsProjectsJs() (*asset, error) {
	bytes, err := appPagesProjectsProjectsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/projects/projects.js", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1626033734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesVersionsVersionsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x41\x0a\xc3\x30\x0c\x04\xef\x7e\x85\xd1\x3d\xf8\x03\x1b\x3d\xa1\xc7\xde\x9d\x5a\x10\x83\xdb\x80\x25\x0a\xfd\x7d\x51\x6c\x68\x21\xb7\x61\x76\xbd\x16\x76\xc9\x45\x7a\x7c\xb4\xac\xba\x92\x55\x6b\x42\x7c\x97\xae\xf5\x78\x29\xd2\x88\x39\x04\x58\xde\x9a\xc4\x5a\x56\x7a\xcf\x74\x69\x55\x8d\x38\xc4\x08\xf3\x9e\x93\x73\x1f\x70\x6a\xbe\xe5\xa7\x20\xd9\xfe\xef\xe6\xfc\x4f\x23\x8d\x47\x6e\xe6\x10\x6c\x3b\xca\xe7\xfa\xdf\xe2\x9a\x66\xd9\x99\x03\xd2\x79\x1b\x7f\x03\x00\x00\xff\xff\x2a\x1a\xed\xba\xcc\x00\x00\x00")

func appPagesVersionsVersionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesVersionsVersionsHtml,
		"app/pages/versions/versions.html",
	)
}

func appPagesVersionsVersionsHtml() (*asset, error) {
	bytes, err := appPagesVersionsVersionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/versions/versions.html", size: 204, mode: os.FileMode(420), modTime: time.Unix(1625987436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesVersionsVersionsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x31\x6f\xa3\x40\x10\x85\x7b\x7e\xc5\x93\xaf\x58\x90\xce\xf8\x07\x58\x5c\x63\x9d\x74\xc5\x25\x4d\xa2\x34\x96\x0b\xb2\x8c\xc5\x5a\xeb\x1d\x32\x3b\xd8\xb1\x2c\xfe\x7b\x04\x82\x18\x9a\x74\xb0\xf3\xbe\xf7\x76\x9e\xd6\xfa\x32\x46\xbc\x91\x44\xc7\x21\xe2\x9e\x00\x96\x43\x54\x69\xad\xb2\xa4\xd9\x70\x02\x68\xed\x62\x6e\xd9\xb7\xe7\x10\x51\x60\x6f\x9e\xcb\x33\x99\xdf\x30\x23\x69\x0e\x09\xd0\x25\x09\xe0\x82\xd3\x25\x76\x71\x74\x45\x81\x8a\x6d\x7b\xa6\xa0\xf9\x47\x4b\x72\x7b\x21\x4f\x43\x82\xf9\x75\x19\xc3\xd7\xde\x45\x5d\xbf\x73\x75\x33\xd9\x36\x19\xf8\x23\xa9\xad\xd3\xd5\xa6\x6c\xdc\x66\x92\xad\xb2\x61\x04\xe4\x5a\x53\x48\x85\x22\x8a\x3f\x10\x8a\xf9\x29\x72\x48\xb3\xe5\x78\xa2\x7a\xcd\x7d\x9c\xcc\xee\x95\xbb\x10\x48\xfe\xbd\x3e\xfd\x47\x01\x63\xb6\xdf\x8a\x23\x0b\xd2\xa1\x09\x34\xc2\x27\xb2\x0a\x3e\x62\x72\xcb\x66\x5e\x63\x61\x10\x5e\x6c\x69\x85\x4a\xa5\xbf\x9e\xfa\xbf\xd4\xa8\xf4\x4b\x3d\x98\x99\xbf\x65\xdf\x7b\xcf\x2b\x5e\xfa\x4f\x09\x96\xbc\xff\x29\xa2\x5a\x46\x60\x00\x72\xa5\x4f\xdd\x71\x50\x0a\x8a\x62\x5a\x66\x6f\xd9\x1f\x96\x62\xe1\x6b\x5e\x36\x0d\x85\x6a\x57\x3b\x5f\xa5\x3d\xbc\xf0\xeb\x66\xdf\x8f\x02\xe7\x88\xf0\x75\x46\x4c\xfa\x2e\x1b\xde\x46\xf7\x15\x00\x00\xff\xff\x74\xf8\xd8\x9a\x6b\x02\x00\x00")

func appPagesVersionsVersionsJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesVersionsVersionsJs,
		"app/pages/versions/versions.js",
	)
}

func appPagesVersionsVersionsJs() (*asset, error) {
	bytes, err := appPagesVersionsVersionsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/versions/versions.js", size: 619, mode: os.FileMode(420), modTime: time.Unix(1626021753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreComponentJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x41\xaa\xc3\x30\x0c\x84\xe1\xbd\x4f\x31\xcb\xf7\xc0\xf4\x02\xc5\xab\x9e\x44\x38\x0e\x31\xc4\xb2\x88\x94\x45\x29\xb9\x7b\x91\x69\xa9\xb7\xff\x0c\x5f\xde\x49\x15\x8f\xde\xa4\x73\x61\xc3\x2b\x00\xb9\xb3\xda\x71\x66\xeb\xc7\x1f\x89\x44\x30\xb5\x12\xb1\x59\xdb\x23\x56\xf2\xfe\xfc\x1f\x4f\xc0\xb6\xaa\x37\xdf\x91\xc6\xed\xfe\xab\x24\x82\x04\x12\x99\x9a\x1b\x48\x83\x9a\xea\xc7\x44\xfa\xea\xd3\x56\x59\x8d\x38\xbb\x7f\xf2\x52\xd6\xca\x65\xf1\xf9\x0a\x57\x08\xef\x00\x00\x00\xff\xff\x83\xcb\xbd\x27\xbe\x00\x00\x00")

func coreComponentJsBytes() ([]byte, error) {
	return bindataRead(
		_coreComponentJs,
		"core/component.js",
	)
}

func coreComponentJs() (*asset, error) {
	bytes, err := coreComponentJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/component.js", size: 190, mode: os.FileMode(420), modTime: time.Unix(1626034830, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreViewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x10\x3a\xd4\x72\x53\x38\x5b\xaf\x81\xd1\xc3\x30\x60\x03\xda\xd3\x8a\x5d\x62\x1f\x3c\x85\x6d\xd4\x3a\x54\x66\x29\x6b\x8b\xc4\xff\x7d\xa0\xe3\x0f\xc9\x71\x80\xed\x64\x59\x24\x1f\xa9\xf7\x9e\x65\x55\x16\xd6\xc2\x4f\x8d\x6f\x70\x98\x01\x28\x43\xd6\x55\x7b\xe5\x4c\x25\xcd\xce\x69\x43\x36\x6e\x02\x00\x6e\xa3\x6d\x62\xb1\x44\x0e\x42\x0a\x5d\x1c\xae\xae\xa0\x5d\xf6\xe1\x18\x8e\x47\x10\xbf\xcc\xfa\x43\x2c\x87\x62\x65\xc8\x15\x9a\x90\xab\xd7\x46\xed\xb7\x48\x2e\xf9\xbd\xc7\xea\xe3\x47\x5b\x27\x83\x26\x71\x50\xbb\xdd\x19\x42\x72\x90\x02\xed\xcb\x92\x43\xf5\x6c\x06\xa0\xe9\x05\x95\x93\x7d\x3c\x18\x57\x13\x61\xf5\xed\xf1\xe1\x1e\x52\xe8\x33\x92\x8d\xdb\x96\x17\xa0\xfb\xb5\x17\x2f\x35\xbd\xca\x76\x16\xfd\x04\x43\x2b\x3e\xf9\x80\xaa\xc9\xba\x82\x14\xf2\xae\xd0\xa4\x9d\x00\x4d\x13\xf1\x6e\x40\x98\x88\x25\x5c\xd7\xf5\xaa\xbb\x23\xf2\x00\xdf\x5b\x5d\x98\x66\xc9\x07\xe8\x60\x16\x0b\x38\x1c\xe0\x89\x6e\x65\x0c\x75\x3d\x3b\xe1\x92\x75\xc0\x98\xcc\xf4\x22\x3b\x64\x87\xcc\x5e\xcb\xe4\xfa\x2e\xe6\x67\xc6\xab\x2c\x3e\xc6\x59\x9d\xd5\x8b\xe7\xe5\xb8\xe6\xa1\x70\x6a\x83\x16\xd2\xd3\x6b\x82\xef\xa8\x4e\x2d\x07\x0e\xfc\x44\xff\x40\x0c\xf2\x62\xef\x35\x35\xf5\xab\x76\x1f\x40\xb8\xea\x03\x0e\xe2\x66\xd8\xc8\xdc\x29\xdb\x67\xbf\xd8\xed\x12\x55\xa8\x0d\xae\xbf\x74\xbb\x76\x15\x09\x98\x8f\x84\x4a\xa8\xd8\x22\xcc\x41\x44\xf9\x72\x0a\x13\xdf\x77\x55\xa0\x78\xcf\x2f\x63\xf9\xb3\xaf\x3e\xe7\x8c\xe3\xa3\x04\xe1\xdb\xdc\x83\xaf\x41\xf1\x36\x48\xd6\xf0\xbc\xaf\x29\x31\xc1\xaa\x32\x95\x8c\x9e\x0a\x5d\xe2\x1a\x9c\x01\x26\x6f\xef\x10\xa2\x0b\x9d\x23\x30\x9e\x49\x60\x38\x6c\x7f\xc4\x1b\xc0\x38\x38\x65\x2d\xda\x75\xbe\x6c\x17\x2c\x0e\xa4\xcd\x23\xa9\x70\x57\x16\x0a\x03\x85\x56\x9f\xf2\x9b\x4e\x96\xe4\xc5\x68\x92\x62\x99\x91\x88\x3d\xa3\x01\x54\xe8\xf6\x15\x41\xf7\x71\xf4\xce\xfb\xfa\x87\x65\x18\x7b\x4e\xaa\x52\xab\xd7\x38\x15\x5b\x74\x1b\xb3\x96\xb1\xf0\x6c\x84\x4d\x49\xe3\x3d\xb9\xca\xde\xf2\x79\xc6\xc6\x4b\xd9\x7c\x2b\x11\xe5\x77\xcd\x5e\xb3\x8a\x43\xff\x35\x85\x83\xff\x4e\x38\x67\x06\xec\x5d\xe8\xa7\x0f\x2e\x9c\x62\xa3\x67\xcf\x2f\x61\x5a\x06\x5a\x0d\x09\x98\xf7\xaf\xa3\x4c\x16\xcb\x8b\x89\x34\x13\x17\xcd\xea\xe5\x79\x4a\xfa\xd5\x51\x1e\x38\xf2\x52\xd3\xdb\xb0\x69\x24\xa2\xf6\xed\xa2\x6e\x2d\x3b\xbd\x76\xb2\x63\xa5\x44\xd7\xf1\x32\xfa\x94\x86\xcb\xd0\x8f\x8f\x85\x9f\xce\x38\xbf\x94\x96\xd3\x77\x6f\x60\x2a\x8b\x7c\xd1\xb4\x41\xc9\x3f\x85\xf1\xb5\xdd\xff\x28\x46\x17\x78\x93\x79\x8e\xf3\x88\xef\xee\x5f\x70\x38\x6f\x02\xe7\x39\x98\xa7\x03\x68\x69\xbd\x34\xcf\x79\x75\x33\xc5\x7f\x55\xd7\xb3\xbf\x01\x00\x00\xff\xff\xb2\xbc\x1e\x20\x7e\x07\x00\x00")

func coreViewJsBytes() ([]byte, error) {
	return bindataRead(
		_coreViewJs,
		"core/view.js",
	)
}

func coreViewJs() (*asset, error) {
	bytes, err := coreViewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/view.js", size: 1918, mode: os.FileMode(420), modTime: time.Unix(1626035464, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x4e\x03\x21\x10\x86\xef\x3e\xc5\x88\x87\xd5\xc4\x96\xbb\x42\x13\x53\x3d\x1a\x4d\xf4\xe2\x91\xc2\x98\xa5\x65\x81\xc0\xb0\xb5\x31\xbe\xbb\xa1\xac\xb5\x07\x2f\xf5\xc4\x30\xf3\xfd\xff\x90\x19\xc4\xf9\xfd\xd3\xf2\xf5\xed\xf9\x01\x7a\x1a\xdc\xe2\x4c\xb4\x03\x40\xf4\xa8\x4c\x0d\x00\x84\xb3\x7e\x03\x09\x9d\x64\x99\x76\x0e\x73\x8f\x48\x0c\xfa\x84\xef\x92\xf1\x96\xe2\x46\xa5\xcd\x8c\x7a\x1c\x70\xae\x73\x66\xc0\x4f\xd0\x0e\xca\xfa\x23\x95\xe0\x3f\xbd\xc5\x2a\x98\xdd\x64\x54\x1c\x58\x23\x59\x65\x67\x03\xfa\xc2\x40\x3b\x95\xb3\xec\x56\x85\x28\xf8\xd9\x4a\xa5\x6e\x42\x79\x71\x2d\x6a\x57\x63\xc7\xbd\x74\xb4\xb8\x65\x0b\xc1\x8d\x1d\xff\x2a\x67\x52\x54\x72\xf5\x39\x40\x0d\xc8\x3a\xd9\x48\x40\xbb\x88\x92\x11\x7e\x10\x5f\xab\x51\xb5\x2c\x83\x9c\xb4\x64\x5c\x87\x84\xbc\x36\x98\xaf\x73\x95\xb7\xea\xe2\x44\x03\x1d\x86\x18\x3c\x7a\xfa\xaf\x8b\x8a\xb1\x4d\xf3\x54\x7d\x63\x00\x54\x8c\x20\xc1\xe3\x16\xee\x62\xbc\xfc\x9c\xb2\x00\xd5\xf4\x11\x7d\x79\x41\x87\x9a\x42\xba\x81\xee\xe2\xb0\x8a\xee\xfa\xc0\xd5\x11\x2c\x83\x27\x65\x3d\xa6\x63\xb8\x16\xba\x09\xfb\xba\xba\x9d\x16\xf5\xfb\x40\xc1\xdb\xae\x05\xdf\xff\xc0\xef\x00\x00\x00\xff\xff\x1b\x95\x0c\x51\x98\x02\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 664, mode: os.FileMode(420), modTime: time.Unix(1626034171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stylesDarkThemeCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4f\x4f\xe3\x3e\x10\x3d\xd7\x9f\x62\x04\xfa\x89\xdf\xb2\xa4\xb4\xe9\x96\x16\x47\x68\x39\xec\x7d\x0f\x7b\x44\x1c\x9c\xda\x4d\x46\x38\xb6\x65\x1b\x08\xac\xf2\xdd\x57\x76\xfe\xb4\x09\xad\x72\xca\xf8\x79\x9e\xdf\xbc\x67\x3f\x62\x65\xb4\xf5\x70\x55\x7a\x6f\x1c\xbd\xbd\xdd\x6b\xe5\xdd\xbc\xd0\xba\x90\x82\x19\x74\xf3\x9d\xae\x6e\x77\xce\xfd\xdc\xb3\x0a\xe5\xc7\xc3\x6f\x23\xd4\xf7\x3f\x4c\xb9\xab\x8c\x90\x6b\xf8\x4b\x66\xc9\xbb\xc8\x5f\xd0\x27\xb9\xae\x13\x87\x9f\xa8\x0a\x0a\xb9\xb6\x5c\xd8\x50\xca\xc8\xec\xdc\x42\x43\x48\xae\xf9\x47\xe8\x11\x58\x93\x96\x81\xc2\x55\xe0\x80\xc8\x71\x03\x8e\x29\x97\x38\x61\x71\x9f\x91\x99\x44\x25\x92\x52\x60\x51\x7a\x0a\xcb\xf9\x66\x2d\xaa\xac\xdb\xec\xf0\x53\x50\x58\xde\x99\xc8\xc8\x76\x2f\x85\xd5\xaf\x8a\x27\x3b\x2d\xb5\xa5\x70\x99\xa6\x69\x46\x66\xfd\x1f\x63\x2c\xf2\xcf\x1d\x56\x46\x8a\x64\xa7\x95\x67\xa8\x84\x0d\x87\xa9\x58\x9d\xbc\x23\xf7\x25\x85\xbb\xcd\x3a\x36\xac\x98\x2d\x50\x51\x58\x00\x7b\xf5\x3a\x23\x33\xc3\x38\x47\x55\x24\x5e\x1b\x0a\x9b\x45\x04\xf5\xb5\x5c\x7b\xaf\x2b\x0a\x69\x2c\x1f\xb1\x18\x8b\xca\x47\xb9\x28\x25\x85\xf7\x12\xbd\xc8\xc8\xcc\x79\xab\x5f\xc4\xf0\xdf\x4c\xf0\xee\xad\x08\x7b\x06\xd9\x8b\xc5\x7f\xe3\xb3\x4b\xed\x44\x40\x74\xe2\xfa\xb6\xdd\xa8\xc7\xd5\xa3\x7d\xa2\xf6\x09\xaa\xbd\x0e\x5b\x3b\x6c\x54\xb3\x34\x35\x38\x2d\x91\x1f\xc6\x64\x06\x8f\x8e\xc7\xdc\x10\x52\x2e\x27\x2b\xab\x76\x14\x23\xa3\x56\x3f\x7a\x74\x3a\x41\xa7\x27\xd0\xe9\xba\x47\xaf\x4e\xb2\x4e\xd0\x9b\xd1\xe8\x5b\x01\xeb\x93\x76\x74\xe5\x21\x81\x5d\xf5\xa0\xf6\xd7\x36\x7c\xd9\xd9\x69\xf4\xeb\xe1\x6c\x76\x64\xc9\xb9\xd0\xf1\x6d\xf8\x86\x8e\x14\x94\x56\xc1\x9a\x2e\x5d\xad\x95\x87\x70\x75\xc2\xd9\x53\x69\xc5\xfe\xf9\xc8\xd2\xcb\xa5\xd8\x32\x7e\x77\xbc\x4a\x4b\xfd\xd6\xc6\xb5\xc7\xac\x72\xb6\x10\x2d\x06\xab\x62\x12\xe4\x21\x35\x12\xc3\xca\xe4\x22\xc5\x7b\x14\x7a\x3b\xe4\xe2\x86\x3c\xed\x24\x73\x0e\xae\x1f\xe0\x22\x14\x72\x66\x2f\x9e\x6f\xc8\x13\xf2\x71\x69\x42\x71\x3f\x16\xd3\xdf\x94\x5e\xfa\x61\x90\x32\xd0\x16\x56\x7c\x1c\x4c\xa2\xb0\x36\x75\xe7\x50\x43\xc8\x63\x25\x38\x32\xf8\xbf\x42\x35\x08\xb8\x4f\x97\xa6\xfe\xd6\x86\xb5\x7d\x34\x46\xd9\xd8\x46\x0f\x9a\xf8\xa8\xbc\x7a\xaf\x55\x44\x9e\x79\x07\x00\xbe\x9e\xaa\x0d\xfb\x97\x17\xa2\x6d\x36\x4c\x1b\xe0\x44\xcf\x88\x3d\xd9\xb3\x63\x1b\x91\x37\xff\x02\x00\x00\xff\xff\xba\x12\xe6\xc3\x74\x05\x00\x00")

func stylesDarkThemeCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesDarkThemeCss,
		"styles/dark-theme.css",
	)
}

func stylesDarkThemeCss() (*asset, error) {
	bytes, err := stylesDarkThemeCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles/dark-theme.css", size: 1396, mode: os.FileMode(420), modTime: time.Unix(1626023152, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stylesMainCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcd\x6e\xf3\x30\x0c\xbb\xe7\x29\x04\x7c\xf8\x6e\xf3\xd0\xfd\x5c\xe6\x3c\x8d\x1d\xab\x89\x00\x47\x0a\x14\xb5\x4e\x36\xf4\xdd\x87\xc4\x29\x50\x14\x3b\x92\xa2\x28\x9a\x8e\x92\xd6\x17\x18\x6c\xcc\xf0\xd3\x00\x0c\x48\xfd\x60\x1e\xde\x4e\xa7\xeb\xd0\x36\x00\x85\x92\x0d\x15\x97\x0d\x8f\x41\x7b\x62\x0f\xa7\x0d\x4c\x21\x25\xe2\xfe\x40\x72\x45\x3d\x67\x29\x1e\x06\x4a\x09\xb9\x6d\x6e\x4d\xf3\xef\x4a\x58\x9e\xad\xff\x3f\x38\x7f\x3d\x19\x87\x8b\xc9\xbe\xf9\xda\x09\x5b\x20\x46\xdd\xd7\x13\xcd\x53\x0e\xab\x87\x73\xc6\x25\xca\x72\x68\x82\xa6\x7d\xbc\xb1\x2e\x91\x62\x67\x24\xec\x41\xa5\x54\x85\x91\x65\xac\x12\x61\x73\x33\x7d\xa3\x87\xf7\xcf\x69\x69\xef\x54\x39\x82\x45\xc9\x69\x23\x0d\x17\x73\x09\x3b\xd1\x50\xbd\x2e\x9c\x50\x33\x31\x6e\xd3\x28\x8b\x0b\x99\x7a\xf6\xd0\x21\x1b\xea\x43\x11\x2e\x8a\x99\x8c\x1e\x3e\x14\xc7\x7a\x3e\x5e\xcc\x84\x5d\x0c\x7f\xbc\xa2\xbd\xe7\xae\xad\xa9\x14\x28\x1a\xa6\x8d\xce\x34\x9b\x9b\x6d\xcd\xe8\x6c\x9d\xd0\x03\xcb\x76\xfe\xd6\x34\x67\xc2\x9c\x66\xb4\xdd\x2e\x8a\x26\xd4\xbd\xff\xc7\x51\x0e\x11\xeb\x7f\x8e\xc4\xee\x28\xfa\xc8\xf4\x1b\x00\x00\xff\xff\x22\xb1\xc4\xea\xf1\x01\x00\x00")

func stylesMainCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesMainCss,
		"styles/main.css",
	)
}

func stylesMainCss() (*asset, error) {
	bytes, err := stylesMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles/main.css", size: 497, mode: os.FileMode(420), modTime: time.Unix(1626024833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/main.js":                      appMainJs,
	"app/pages/home/home.html":         appPagesHomeHomeHtml,
	"app/pages/home/home.js":           appPagesHomeHomeJs,
	"app/pages/projects/projects.html": appPagesProjectsProjectsHtml,
	"app/pages/projects/projects.js":   appPagesProjectsProjectsJs,
	"app/pages/versions/versions.html": appPagesVersionsVersionsHtml,
	"app/pages/versions/versions.js":   appPagesVersionsVersionsJs,
	"core/component.js":                coreComponentJs,
	"core/view.js":                     coreViewJs,
	"index.html":                       indexHtml,
	"styles/dark-theme.css":            stylesDarkThemeCss,
	"styles/main.css":                  stylesMainCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"main.js": &bintree{appMainJs, map[string]*bintree{}},
		"pages": &bintree{nil, map[string]*bintree{
			"home": &bintree{nil, map[string]*bintree{
				"home.html": &bintree{appPagesHomeHomeHtml, map[string]*bintree{}},
				"home.js":   &bintree{appPagesHomeHomeJs, map[string]*bintree{}},
			}},
			"projects": &bintree{nil, map[string]*bintree{
				"projects.html": &bintree{appPagesProjectsProjectsHtml, map[string]*bintree{}},
				"projects.js":   &bintree{appPagesProjectsProjectsJs, map[string]*bintree{}},
			}},
			"versions": &bintree{nil, map[string]*bintree{
				"versions.html": &bintree{appPagesVersionsVersionsHtml, map[string]*bintree{}},
				"versions.js":   &bintree{appPagesVersionsVersionsJs, map[string]*bintree{}},
			}},
		}},
	}},
	"core": &bintree{nil, map[string]*bintree{
		"component.js": &bintree{coreComponentJs, map[string]*bintree{}},
		"view.js":      &bintree{coreViewJs, map[string]*bintree{}},
	}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"styles": &bintree{nil, map[string]*bintree{
		"dark-theme.css": &bintree{stylesDarkThemeCss, map[string]*bintree{}},
		"main.css":       &bintree{stylesMainCss, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
