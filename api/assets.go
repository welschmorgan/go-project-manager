// Code generated for package api by go-bindata DO NOT EDIT. (@generated)
// sources:
// cmd/gui/web-app/app/main.js
// cmd/gui/web-app/app/pages/home/home.html
// cmd/gui/web-app/app/pages/home/home.js
// cmd/gui/web-app/app/pages/projects/projects.html
// cmd/gui/web-app/app/pages/projects/projects.js
// cmd/gui/web-app/app/pages/releases/releases.html
// cmd/gui/web-app/app/pages/releases/releases.js
// cmd/gui/web-app/app/pages/versions/versions.html
// cmd/gui/web-app/app/pages/versions/versions.js
// cmd/gui/web-app/core/component.js
// cmd/gui/web-app/core/loader.js
// cmd/gui/web-app/core/view.js
// cmd/gui/web-app/index.html
// cmd/gui/web-app/styles/dark-theme.css
// cmd/gui/web-app/styles/forms.css
// cmd/gui/web-app/styles/main.css
package api

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appMainJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x15\x8a\x86\x42\x5c\xa5\xdb\xa3\x03\x6f\xe8\x82\xfe\x02\x1a\x20\x68\xd3\xbe\x14\x01\x4a\xcb\x67\x9b\x0d\x45\x72\x24\xe5\xc6\x73\xf5\xbf\x0f\xa4\x28\x89\xb4\x65\x6f\xeb\xc3\x0a\x14\x08\xc5\xef\x8e\xdf\x7d\xbc\x3b\x9e\x4b\x4e\x8d\x81\x97\x4a\xc1\xee\x0c\xa0\x94\xc2\x58\x5d\x97\x56\x6a\x22\x95\x65\x52\x98\xdc\x6f\x00\x58\xbd\x0d\x7f\x01\xd8\x35\x33\x45\x59\x6b\x8d\xc2\x5e\xcb\x4a\x49\x81\xc2\xc2\x0c\x44\xcd\xf9\x55\x82\xa1\xe5\x1a\x17\x3d\xc4\xc0\x0c\x76\x4d\x82\x98\x53\x83\x77\xcc\x72\x84\x19\x64\x5f\xde\x7c\x78\x7f\x33\xfd\xf4\xee\x3e\x4b\xbd\xf4\xf6\x9f\x34\xbf\xd5\xb8\x64\x8f\x0e\x4d\x95\xba\x54\x74\x85\xe6\x32\x85\x6f\x18\x7e\xbf\x96\xc2\x52\x26\x50\x7f\x44\x8e\x2e\x1c\x98\x41\x08\x08\x9e\x3d\xeb\xfe\x1c\x87\x26\xce\x2a\xca\xc4\x0d\x8a\xfa\xb4\x9f\x7d\xd4\x01\x1f\x27\x0e\x7e\x87\xcf\x0c\xbf\x93\x1d\x98\x00\x9b\x9e\x22\xdc\xe4\xa3\x44\x60\x06\x0b\x59\xd6\x15\x0a\x5b\xfc\x59\xa3\xde\x76\x06\x64\x94\x6f\xea\x44\xcb\xda\xa2\xbb\x85\x2f\xe1\x2b\xc0\x0e\xfc\xc7\x29\x64\x6b\x59\x61\x36\x01\x4e\xe7\xc8\xa7\x90\xbd\x75\x4b\x68\x26\x23\x48\xa5\xe5\x37\x2c\xad\x89\xd0\x37\x54\xd0\x15\xc2\x6d\xb7\x33\x6e\xb8\x41\x6d\x9c\x60\x87\x86\x9f\xbb\x9d\x71\x43\x8d\x1c\xa9\xc1\x11\xc3\x0f\xdd\xce\x60\x78\x9f\x66\x8f\x46\x6a\xd1\x69\x42\x52\x31\x04\xdd\xb0\x15\xb5\x48\xda\xc8\xc3\x66\x03\x25\xb5\xe5\x1a\x08\xe6\x7d\xbe\xbb\xb2\x90\x1c\x0b\xd4\x5a\x6a\x92\x2d\x29\xe3\xb8\x00\x2b\x81\x09\x66\x19\xe5\xec\x2f\x04\xaa\x54\x36\x01\xec\xbc\x9c\xb9\xff\x67\x00\xd4\x6c\x45\x09\xfd\x51\x82\x56\xbd\x5f\x5f\x6c\x6d\x84\x30\x8b\xef\xa7\x58\x32\xb1\x20\x44\xe7\x30\xfb\x0d\x74\x11\x10\xb3\x19\x78\xeb\xf6\x00\x83\xd6\x97\x0d\xf9\xfa\x74\x97\x16\x52\x03\x4f\x77\xad\xc9\xef\xad\xf3\xc2\x2b\x06\x53\x6f\xde\x7c\x0d\x0e\xfa\xcc\x2b\x98\x10\xa8\xdf\xde\xdd\xbc\x77\x45\x15\x4a\x49\xa3\xad\xb5\x88\x05\xec\x8b\x98\xf4\x2c\xa2\x00\x47\x31\x21\xce\xe0\xcb\xe5\xff\xad\x96\x15\x33\x48\x88\x46\x23\xf9\x06\x27\xa0\xd1\xe5\x8b\x8f\xb4\xef\x2e\x51\xa7\x01\x60\x4b\x68\x33\x9b\x99\xde\xfd\xb5\x6f\x2b\xed\x21\x79\x84\xed\x34\x2d\xa3\x9e\xe4\x6d\x57\x18\x6c\x46\xa2\xe8\xfe\xc5\x82\x38\x4e\xa4\xf7\x92\xc0\x02\xf3\xd1\xdd\x06\x90\x1b\x4c\x08\x71\x74\x74\x6a\x61\xd1\xb5\x8e\x17\x07\x07\xee\x77\xc8\x2f\x8e\xd7\x7d\x68\x17\x03\x5b\x87\x9d\xf8\x0b\x9c\x40\x96\x25\x84\x42\xc8\x6b\x2c\x1f\x5e\x72\xfe\x9a\x71\x5f\xe0\x2e\x7d\x23\x4d\x3b\xa8\x27\x72\x71\x71\x95\x7c\x76\x12\xf7\x1c\x67\xf0\x6b\xbe\x67\x36\xa2\xcd\x09\xee\xf9\xd5\x9e\x71\xa7\xd8\xbf\xb7\x69\xa2\x55\x73\x20\xd9\x12\x6d\xb9\xee\x3d\xdc\x52\xdd\x5e\xe6\x04\xb2\x6f\x26\xcb\x0b\xbb\x46\x41\x12\x77\x2e\xdb\x94\x14\xc6\x4b\x32\x16\x99\x14\x1f\x4b\xcd\x94\x7d\xed\x3c\xe3\xe2\x14\x53\x97\xb1\xad\xb3\x49\xaa\x79\x3e\x39\x4b\x83\x76\x3a\x45\x9f\x0e\x73\xed\x78\x1c\x6b\x5b\xf1\x9f\x8d\xc4\x3d\x31\xff\x53\x1c\xdd\x35\x8d\xb5\xcc\x13\x4d\xb3\xed\x15\x43\x91\x46\x6d\x73\x38\x91\x0c\x9f\xda\x63\x9a\xa1\xe5\x24\x41\xba\x5c\xef\x5d\x25\x51\xb5\x19\x1d\x95\x41\x0f\x2b\x9c\xc0\x30\xeb\xc1\xf0\xe3\x47\xdf\xf9\x82\x59\xfb\x56\x34\x57\xed\x79\x49\x7a\xfc\xa7\x13\x5d\x6d\x2a\x8d\x9b\x8f\xa5\x3e\xfe\x72\x7f\xa5\x4a\x3d\x7f\xba\x1b\xf8\x25\x9d\xda\x95\xe7\x93\xe0\x23\x7d\x93\x2c\x98\xd4\x6d\x2b\xed\x2b\x8e\x6e\x45\x32\xe3\x69\x0f\xed\xc2\x94\xba\xb0\x5b\xe5\x67\x2d\x8b\x8f\xf6\xf2\x1b\xdd\xd0\x00\x4a\x30\xf8\x68\x23\x79\xe2\x2d\xe6\xc2\x3f\xc2\xb7\xc3\xf5\x74\xe6\x72\xb1\x2d\xa8\x52\x28\x16\xd7\x6b\xc6\x17\xc4\x94\x3a\x7a\x20\x01\x2e\x2f\x01\x37\x94\x0f\x69\x7d\xb5\x77\x51\x4b\xea\x04\xda\xc2\xac\xc5\xf5\xb1\xc7\x07\x17\xe5\x9a\xea\x97\x96\xbc\xc8\x0b\x2b\x3f\x29\x85\xfa\x9a\x1a\x24\x39\x5c\xec\x03\x4d\x3d\x37\x56\x33\xb1\x22\xbf\xe4\x67\x51\x32\x0f\x30\x26\x8c\xa5\xa2\xc4\xd0\x80\x0f\x88\x90\xfc\x68\x96\xb4\x0f\xe1\xd1\xa2\xc6\x47\xdb\x5d\xde\x86\x6a\xa8\xb6\x6f\x91\x2e\x50\x9b\x70\x52\x58\x75\xfe\xfb\xed\x20\x1f\x39\x57\x9a\xae\x2a\x7a\x3e\x81\x73\x21\x9f\xfb\x9a\x3e\x3f\x8a\xf5\xdb\xcf\x4b\x29\xac\x96\x7c\xcc\x24\x3c\xc9\x9e\x2c\x39\x3a\x63\x5f\xf8\x07\x07\x2e\x20\xbb\xcc\xa2\x45\xe1\x16\xf8\x68\x27\xb0\xab\xd0\xae\xe5\x62\x0a\xe7\x6f\x5e\xdd\x9d\x4f\x60\xdd\xf2\x98\x0e\x94\x9a\x3c\x5c\x59\xdb\xcc\x92\xfe\xd5\xe7\x97\xcf\x37\x92\x0f\x05\x3e\x8c\x6c\xef\x2c\x56\xc4\x4f\x31\x61\xf0\x4b\x87\x27\xce\x4e\x64\x3f\x67\x59\x7f\x5b\x0e\x3c\xb7\xe2\x04\x7a\x5e\x5b\x2b\x45\x67\x31\xb7\xa2\x9d\x8b\xee\xda\x52\xf0\x67\x0f\x5b\x52\x94\x9c\x95\x0f\xae\x13\xf8\x48\xd2\x79\xd2\xf3\x0d\x8e\x38\x4b\x0a\x60\x6e\x45\x3c\x7f\x75\xd3\x7a\x82\xe1\x6c\x4c\x09\xd2\x45\xbe\x94\xda\xf5\x9f\x61\x76\x94\xcb\x78\x78\xcc\xf7\x7e\xa5\x8d\x48\x59\x04\x41\xa3\xe9\x70\x7f\x6c\x3d\x32\x6c\xa5\x13\xdd\x93\x27\xff\x38\x5c\x79\x67\xc7\x00\x87\x01\x3d\xe0\x16\x98\x18\x9f\x8c\x86\xc0\x5c\x43\x74\xc8\x6e\x24\x76\xbf\xc4\xc6\x9f\xba\x07\xdc\xde\xfb\xd2\x87\x6e\x7a\x8e\x1e\xa8\x64\xc6\x1d\xb3\xdc\x7b\x80\xba\x70\x2a\x34\x86\xae\x90\xd8\xa8\xa4\x7f\x22\x1d\xd5\x09\xac\xea\xa0\x2a\x99\xce\xdd\x89\xa3\x69\xa5\xe2\xa4\x32\x96\xda\xda\xfc\x41\xf5\x78\x56\x35\x67\x7f\x07\x00\x00\xff\xff\xc5\xb1\x87\x30\xf4\x0f\x00\x00")

func appMainJsBytes() ([]byte, error) {
	return bindataRead(
		_appMainJs,
		"app/main.js",
	)
}

func appMainJs() (*asset, error) {
	bytes, err := appMainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/main.js", size: 4084, mode: os.FileMode(420), modTime: time.Unix(1635012976, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesHomeHomeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xc9\x48\x4d\x4c\x49\x2d\x52\x48\xce\x49\x2c\x2e\xb6\x55\x2a\xc9\x2c\xc9\x49\x55\xb2\xf3\xc8\xcf\x4d\xb5\xd1\x87\x48\xd9\x71\x71\xd9\xa4\x64\x96\x29\x64\xa6\xd8\x2a\x95\xe7\x17\x65\x17\x17\x24\x26\xa7\xea\x66\xe6\xa5\xe5\x17\x2b\xd9\x71\xd9\xe8\xa7\x64\x96\xd9\x29\x00\x02\x00\x00\xff\xff\x94\xde\xa8\xe5\x47\x00\x00\x00")

func appPagesHomeHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesHomeHomeHtml,
		"app/pages/home/home.html",
	)
}

func appPagesHomeHomeHtml() (*asset, error) {
	bytes, err := appPagesHomeHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/home/home.html", size: 71, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesHomeHomeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcd\x8e\xd3\x30\x10\xbe\xe7\x29\x46\xcb\xc1\x89\xb4\x78\x1f\x20\xca\x4a\x68\x05\xda\x03\x7f\x12\xdc\x10\x07\x93\x4c\x14\x83\x33\x0e\xf6\x78\x4b\x45\xfb\xee\xc8\xce\x4f\xdd\x52\xf5\x96\xf1\xf7\x33\x9f\xfd\xa5\x35\xca\x7b\x78\xb6\x23\xc2\xdf\x02\xa0\xb5\xe4\xd9\x85\x96\xad\x2b\xab\x74\x72\x2c\x0a\x00\x4d\x9a\x97\x19\x80\x07\xed\xe5\x8b\xc6\x1d\x34\xd0\xd9\x36\x8c\x48\x2c\x7f\x07\x74\xfb\x2f\x68\x30\x49\xc5\xab\x9d\x75\xbf\xfc\xa4\x5a\x7c\xad\xa9\xb7\x5e\x54\xf5\x49\xbb\x61\xd0\x40\xa0\x0e\x7b\x4d\xd8\xd5\xe7\xde\x52\x13\xa1\x7b\xfe\xfa\xe1\x3d\x34\x20\xc4\x8c\xf6\xc8\xed\x50\x8a\x07\x35\xe9\x87\xcd\x44\x54\x09\x03\x90\x3c\x20\x95\x0e\x3d\x34\x8f\xe0\xd0\xcb\x9f\xde\x52\x59\x9d\xc3\xd9\xee\xc7\xe5\x3e\x57\x73\x6d\xdf\xf5\x39\xa7\x75\xa8\x18\xdf\x69\x34\x5d\x29\x3e\xaa\x11\xd7\x9b\x5d\x67\x7c\x56\x3c\xdc\x66\xbc\x09\x3c\x58\x27\xee\x4f\x1b\xe5\x7c\x24\x49\x8d\xb8\x49\x8f\xe9\x2b\x95\x91\xcb\x23\xe7\x1e\x5e\x94\x09\xb8\xd6\x93\x2a\x84\x3e\xc2\x1e\x39\xef\x68\x16\xbe\x35\x18\xa7\xf2\x6e\xa5\xdc\x2d\x4b\x32\xb5\x51\x3f\xd0\xdc\x90\x26\x7c\xd5\xa5\x41\x32\xfe\xe1\x27\x4b\x8c\x14\x77\xc6\x5c\xff\xb9\x6a\x9a\xc2\xad\x40\x09\x5f\x5d\xd3\x20\x79\x3f\xc5\x36\x44\x74\x17\x39\xe0\x50\x75\x9f\xc8\xec\xa1\x01\x76\x01\x73\x28\xbd\x06\x34\xf3\xab\xc0\xe1\x70\x51\xee\xb7\x98\xed\x7b\x16\x6e\x7d\x07\xa9\xa6\x09\xa9\x7b\x1a\xb4\xe9\xca\x74\xa9\x25\xca\x55\x42\xda\x55\x5d\xfe\xb5\x39\x63\x95\x2d\x24\x87\x1c\x1c\x6d\x66\xa9\xce\xba\x38\xfe\x0b\x00\x00\xff\xff\xd0\x7c\x57\x04\x81\x03\x00\x00")

func appPagesHomeHomeJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesHomeHomeJs,
		"app/pages/home/home.js",
	)
}

func appPagesHomeHomeJs() (*asset, error) {
	bytes, err := appPagesHomeHomeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/home/home.js", size: 897, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesProjectsProjectsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\xae\x83\x20\x10\x86\xf7\x9c\x82\xb0\x7a\x6f\x61\xb8\xc0\xc8\xa6\xfb\xc6\xc4\xf6\x00\x88\x24\xd2\x52\x30\x30\x2e\x8c\xf1\xee\xcd\x88\x4d\x8c\xee\xbe\x7c\xf3\x03\xf3\x03\x83\xd5\xbd\x4d\xdc\x78\x9d\x73\x2d\xd0\xa1\xb7\x42\x35\x29\xbe\xac\xc1\x0c\xb2\x8c\x15\x63\x80\xba\xf3\x96\xbb\xbe\x16\xe3\x3e\xad\xbc\xcb\x28\x14\xe3\x1c\x90\x72\x44\xc4\xa9\xc0\xa6\xd5\x5d\x7f\x2c\x48\x1c\x8e\xee\x99\xfc\x59\x35\x1a\x87\xb3\x7b\xcc\xe3\xe5\x68\x1b\xa7\x64\xec\x2d\x06\x4c\xf1\x70\x09\xc8\xf2\x2a\x99\x7d\x13\xc0\x2e\xf6\xf3\x75\xe1\x8a\xb4\xd8\xc3\xc4\x8a\x81\xdc\xca\x51\xcb\x6e\x42\x8c\x81\xc7\x60\xbc\x33\xef\x5a\x2c\x0b\xcf\x46\x87\xdf\x87\xfc\xfd\xf3\x75\x15\xaa\x35\x3a\x80\x2c\x59\xf5\x0d\x00\x00\xff\xff\x2e\xa9\xc5\x44\x43\x01\x00\x00")

func appPagesProjectsProjectsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesProjectsProjectsHtml,
		"app/pages/projects/projects.html",
	)
}

func appPagesProjectsProjectsHtml() (*asset, error) {
	bytes, err := appPagesProjectsProjectsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/projects/projects.html", size: 323, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesProjectsProjectsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x52\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x10\xdd\x41\x36\xd0\x3a\xf7\x15\xee\xa5\x18\xb0\xc3\x3e\x02\x24\x3b\x05\x3d\x68\x32\x33\xab\x50\x44\x8f\xa2\x97\x05\x6d\xfe\xfb\x60\x57\xb2\xad\xa2\xe8\x79\x27\x26\xf4\xe3\xe3\x7b\x4f\x34\x4e\x87\x00\x1b\xa6\x47\x34\x12\xe0\x69\x05\x60\xc8\x07\xe1\xde\x08\x71\x51\x8e\x1d\x00\x69\x6d\xa8\x0c\xb9\xfe\xe8\x03\xd4\xb0\x57\xdf\xf4\x11\xd5\x35\xa8\x1f\xec\x86\xb2\xd1\xd2\x0e\x75\x77\xee\xc6\xf6\x96\x7a\x36\x78\x4f\x5e\x98\x9c\x7a\xb8\x9d\x49\xba\xb4\xaa\x86\xfd\xd8\xbf\xac\x56\x00\xd6\x5b\xc9\x97\xfd\xb1\x78\x82\x1a\x1a\x32\xfd\x11\xbd\x54\xbf\x7b\xe4\xf3\x16\x1d\x8e\xba\xd4\x87\xc4\x73\xe3\x6c\x90\x9b\x9f\xd4\x9c\x55\xb9\x58\xf3\x0b\x25\x99\x2a\xca\xb4\x85\xd1\x37\xc8\x73\x3f\xee\x3b\x10\x43\x31\xba\x86\xc8\x0a\x74\xc8\xd5\x26\x68\x4c\x07\x98\x32\x71\x86\x51\x0b\x7e\x72\x38\xfc\x2b\x94\x70\xd2\x92\x91\x1b\x72\x13\x71\xcc\x72\xe6\x4d\xcc\x06\x9d\x7b\x8f\xba\x99\xa9\x61\x04\x57\x82\x7f\x65\x48\x1a\xbd\x40\x9d\x1c\xec\x0d\xb9\x87\x19\xc8\x74\xaa\x74\xd7\xa1\x6f\xee\x5b\xeb\x9a\x62\x18\x9c\x78\x2e\xb1\x4e\xb9\x67\x50\xa6\x53\x44\xbe\xe0\x18\xa5\x67\x9f\xc7\x33\xbd\xa3\x0e\x67\x6f\x20\x0b\x3f\x3a\x8c\x63\x07\x14\xd3\x16\x57\x6b\xdd\xd9\x75\x9a\xbe\x2a\xa3\x80\x4a\x5a\xf4\x05\x63\x80\xfa\x0e\x18\x43\xf5\x18\xc8\x17\x65\xfe\x79\x3e\xa0\xbb\x45\x78\xb3\x76\xeb\x3d\xf2\xe7\xdd\xd7\x2f\x50\x83\x52\xb7\x39\x62\x71\x7d\xd3\xcf\xe7\xe7\x78\x89\x0b\xdc\xeb\x4b\x99\xa2\x2a\x5f\x59\x0d\x46\xfb\xf7\xbd\xaa\xcc\xeb\x7a\x18\x50\xd7\xf0\x74\x44\x69\xa9\xf9\x08\x6a\xf3\x7d\xbb\x53\x97\xff\x2a\x82\xa8\x7f\xf9\xba\x2f\xe6\xdf\x12\xf9\x66\x5e\x31\xa6\xcb\xbf\x00\x00\x00\xff\xff\x8b\x03\x41\xb5\x5f\x04\x00\x00")

func appPagesProjectsProjectsJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesProjectsProjectsJs,
		"app/pages/projects/projects.js",
	)
}

func appPagesProjectsProjectsJs() (*asset, error) {
	bytes, err := appPagesProjectsProjectsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/projects/projects.js", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesReleasesReleasesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xc1\x6a\xf3\x30\x10\x84\xef\x7e\x0a\x61\x08\x3e\x09\xe5\x0f\xbf\x29\xd8\x8a\x2e\xed\xa5\x97\x12\x9a\xd0\xbb\x12\x6d\x62\x15\xd9\x32\xd2\xda\x89\xdf\xbe\x48\x26\x6e\xd2\x04\x9a\xde\xa4\x6f\xd0\x6a\x67\x18\x5e\x81\x54\xe0\xc8\xce\x48\xef\x97\x29\x6a\x34\x90\x8a\x77\x30\x20\x3d\x78\xce\x46\x59\x24\x09\x57\xba\x27\x1e\x07\x03\xcb\x4c\x69\xdf\x1a\x39\x14\x64\x6f\xe0\x54\x92\x5a\x37\xb4\x02\x7d\xa8\xb0\x20\x8b\xf9\xbc\x3d\x95\x99\x48\x08\xe1\x9d\x21\x5a\x2d\xb3\x1e\x9c\xd7\xb6\xa1\x46\x7b\xcc\xce\x23\x8e\x5a\x61\x55\x90\x45\x3e\x2b\x49\x10\x68\xe4\x14\x87\x16\x0a\xd2\xd8\x06\xca\x4c\x70\xd6\x99\x38\x08\xe5\xd6\xc0\x8f\x97\x4f\xf9\x6c\xfc\x26\xe8\x61\xcb\xf1\x1c\x6e\xee\x7c\x8c\x92\x58\x39\xfb\x09\x3b\xe4\x0c\xab\x6b\x61\x33\xb4\x70\x4b\x5f\x24\xde\xa1\x6b\xbc\x8b\x3f\x9e\xd7\x97\x90\xb3\xf3\xe7\x81\x4e\x4b\x71\xdc\x5a\x35\x84\x30\x52\x37\x26\x4b\xa3\x25\x1a\x70\x3a\x3d\x08\xb7\xe8\x97\x45\x55\x24\x9c\x29\xdd\x8b\x18\xfd\x77\x0e\x0f\x79\x7e\x55\x8f\x1a\x7b\x93\xf5\x1d\xba\x09\x3d\xb8\xc5\x2b\xe9\x64\xed\xff\xe4\x38\xeb\x1a\x65\xa9\xdc\xa1\xb6\x8d\xbf\xb0\x9d\xfd\x6a\x3b\xe1\xad\x83\x38\x42\xc1\xb6\x3b\x4c\xd5\xb1\x3d\xb8\xbd\xb1\xc7\x82\xc8\x0e\xed\x75\xfd\xfe\xe5\xa1\x7e\xa4\x96\xa7\x09\xfd\xcf\xc7\x46\x72\xd6\x3a\x10\x5f\x01\x00\x00\xff\xff\x97\x33\x45\x47\xf0\x02\x00\x00")

func appPagesReleasesReleasesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesReleasesReleasesHtml,
		"app/pages/releases/releases.html",
	)
}

func appPagesReleasesReleasesHtml() (*asset, error) {
	bytes, err := appPagesReleasesReleasesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/releases/releases.html", size: 752, mode: os.FileMode(420), modTime: time.Unix(1635027558, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesReleasesReleasesJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\x1b\x37\x10\xbd\xeb\x57\x0c\x92\xc3\x72\x11\x7b\xdd\xa2\x40\x0f\x36\xb6\x41\xe1\xa6\x48\x8b\xb8\x01\x1a\xb7\x40\x61\x18\x05\x45\x8e\x24\x3a\x14\xa9\x0e\xb9\x56\x05\x43\xff\xbd\xe0\x92\xfb\x25\xef\xca\xf2\xb1\x37\x89\xf3\x66\x38\xef\xcd\x23\xb9\x8b\xca\x08\xaf\xac\x81\x85\xa5\x35\xf7\x3f\x71\x8f\x4c\xe6\xf0\x34\x03\x90\x50\x82\xdf\x6d\xd0\x2e\xc2\x4a\x59\x96\x90\x39\x4f\xca\x2c\x33\x78\x0f\x06\xb7\xd0\x80\x2f\x41\x5e\xcd\x00\x08\x7d\x45\x06\x64\xb1\xc4\x58\x27\x87\x77\x90\x5d\x64\xf0\x0e\x58\xbd\x78\x63\x8d\x5f\xd5\xab\xdf\x76\xa1\x3a\xf2\x73\xa5\xf5\x5f\xc8\x89\xe5\x33\x00\x08\x31\xc8\xd2\xaf\x3a\xfe\xd1\x56\xe4\x62\xbd\xcb\x36\xe9\x46\x99\xca\xa3\x63\xf9\xd5\x6c\x3f\x9b\x09\xcd\x9d\x83\xdf\x51\x23\x77\xe8\x6a\x02\xc2\x1a\xe7\xa9\x12\xde\x12\x8b\x94\x00\xfc\x4a\xb9\x82\x22\xea\x96\xcf\x35\x5e\x5b\x5d\xad\x8d\x83\x12\xee\x6a\x00\xc0\xd3\x12\xbd\x47\xba\x04\x66\xe7\x0f\x39\x94\x3f\x80\x9d\x3f\x14\x1b\xb2\x0f\x28\x7c\x61\xf8\x1a\xf7\x67\x27\x41\x83\x78\x47\xa0\x3d\xc5\x43\x96\xb0\xc6\xe3\xbf\xbe\x90\xdc\x63\xfe\xc2\x0e\x0d\xd6\x79\xee\x11\xca\x12\xbe\xff\x0e\xde\x43\xb6\x50\x46\xb9\x15\xca\x0c\x2e\x21\xab\x4c\xfb\xf7\xc4\x7e\x9d\xad\x48\xe0\xdf\xa1\x38\x59\x9d\x92\xee\xaf\x3a\xdd\x2a\x23\xed\x8f\xb5\x5d\xdc\xab\xb4\x53\xf2\x74\x19\x4e\xa1\x7f\xc2\x0c\xbc\xf2\xfa\xc5\x39\x71\xe2\x6b\xd7\xe7\xb9\x9f\xcd\x00\x94\x51\x7e\xda\x2f\x50\x82\xb4\xa2\x5a\xa3\xf1\xc5\x3f\x15\xd2\xee\x0b\x6a\xac\x2d\x96\xbd\x4d\xb8\x73\x1f\x80\xe7\x73\x2b\x77\x59\x7e\x44\xbe\x63\xa5\x02\xf6\x9c\x47\xf0\x54\xbd\xb4\xdd\x9f\x48\x4e\x59\xf3\x49\x39\x7f\xac\xe2\x63\x84\x9d\x6b\xe5\xfc\xa0\x8c\xc4\x79\xb5\x3c\x96\x59\x03\x9a\x94\x05\x7a\xb1\x62\x6f\x2e\xf8\x46\x5d\xa4\x06\x2e\xde\xe4\x49\xe7\xc2\xaf\xd0\x30\xee\x76\x46\x00\xa1\x0b\x42\x3f\xa5\x50\x3a\x8e\x10\x7c\x0b\x25\xf0\x2d\x57\x3e\x60\x8a\xb0\xc0\x52\xf1\x61\x4f\x85\x32\x06\xe9\x36\x26\x04\x58\x07\x4a\x77\xcd\xaf\x5f\x3e\xff\x16\xc6\xe8\x90\x85\x78\x5b\x65\x3f\x6c\x88\x9a\x5b\x61\xd0\x4f\x5f\xc3\xe0\xe1\xe6\xe7\xd5\x21\xc2\x48\xa4\x9e\xc8\xcf\x9a\x8d\x88\x74\xf5\xb0\xcf\xf3\xfa\x30\x7d\xc5\x9d\x63\x83\x2d\xf2\xbb\x6f\xee\x47\x3a\x14\x3c\x08\xca\x08\xb9\xb3\xa6\xf6\x66\x10\xca\x6a\x2c\x90\xc8\x52\x13\xc8\x5b\x7f\x8e\x34\x94\x58\x45\x85\x05\x21\xf7\xf8\x8b\xc7\x35\x94\xc0\x1e\xb9\xae\x30\xef\x33\x8f\x28\x15\xe3\xed\xd0\x63\xd6\x07\x8d\xe1\x1f\xcb\xb4\xca\xda\x5e\x63\x02\x37\x62\x65\xe9\x48\x0a\xef\x32\x22\xb6\x58\x11\x2e\xa0\x84\xec\x6d\x76\x10\xe8\x0f\xb6\x6e\xb0\x89\x87\xae\x0a\x2e\xe5\x87\x47\x34\x3e\x70\x43\x83\xc4\x32\xa1\x95\xf8\x9a\x9d\x01\xab\x89\x8c\x88\x1e\x59\x9e\x81\xa7\x0a\xf3\x61\xb1\xcd\x06\x8d\xbc\x5e\x29\x2d\x59\xdc\xbd\x8d\x4f\x1c\xa2\x41\x4a\xa8\x91\x12\xf6\x47\x8f\x5e\xe4\xf4\xf1\xf6\xe6\x53\x60\x9c\x08\x2f\x2c\x01\x8b\xf2\xa5\xe3\x07\xca\x0c\x8d\x97\x77\x73\x69\xe7\xc6\x12\xb8\xd9\x78\x38\xf9\x96\x73\x02\x8d\x0c\xff\x1a\xb5\x0e\xc3\x27\xbb\x3d\x83\x29\x07\x88\x08\x9a\x1a\xa7\x97\x3d\x07\xa0\xd6\x03\x82\x83\xa1\x91\xdd\x0e\x34\x0b\xe8\x36\x35\x9d\xd4\xb0\x36\x29\x63\x7d\x1b\x8e\x0a\x18\x3b\x4d\xb0\x70\x0b\xf4\xa5\xbb\x4b\x0a\xdc\x3f\x13\x3b\x5e\x9c\x60\x17\x4d\x6a\x7e\xc0\x9d\xec\xf6\x18\x75\xea\xa8\xf7\xaa\x0a\xab\x43\xc9\xa9\x4f\x88\xbc\x7f\xd7\xb5\x63\x88\x33\x10\x56\x17\xf1\x0d\x62\xb1\xb7\xbc\xbb\x09\x46\xdc\x18\x05\xe9\x6b\x4a\x76\xdb\x73\xc3\xe0\xe2\xf9\xa3\x7b\x56\x06\xc6\xe9\x59\x66\x0c\xf2\x3f\xb6\xcd\xe1\x43\xfa\xb2\x75\xdc\xe9\xde\x69\xcc\xd6\x99\xc7\x1d\xba\x27\xbd\xcb\xdd\x9b\xd1\xef\x68\xc4\x38\x9d\x1d\x53\x66\xfe\xec\x59\x3c\xdd\x90\x93\x96\x9c\xf8\x3a\xeb\xef\xf5\x2a\x63\x76\xd6\x9c\x92\x7d\xdc\xa0\x4d\x5e\xbc\xb6\xf6\xff\x05\x00\x00\xff\xff\x8d\x9e\x05\x26\x62\x0c\x00\x00")

func appPagesReleasesReleasesJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesReleasesReleasesJs,
		"app/pages/releases/releases.js",
	)
}

func appPagesReleasesReleasesJs() (*asset, error) {
	bytes, err := appPagesReleasesReleasesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/releases/releases.js", size: 3170, mode: os.FileMode(420), modTime: time.Unix(1635076231, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesVersionsVersionsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x41\x0a\xc3\x30\x0c\x04\xef\x7e\x85\xd1\x3d\xf8\x03\x1b\x3d\xa1\xc7\xde\x9d\x5a\x10\x83\xdb\x80\x25\x0a\xfd\x7d\x51\x6c\x68\x21\xb7\x61\x76\xbd\x16\x76\xc9\x45\x7a\x7c\xb4\xac\xba\x92\x55\x6b\x42\x7c\x97\xae\xf5\x78\x29\xd2\x88\x39\x04\x58\xde\x9a\xc4\x5a\x56\x7a\xcf\x74\x69\x55\x8d\x38\xc4\x08\xf3\x9e\x93\x73\x1f\x70\x6a\xbe\xe5\xa7\x20\xd9\xfe\xef\xe6\xfc\x4f\x23\x8d\x47\x6e\xe6\x10\x6c\x3b\xca\xe7\xfa\xdf\xe2\x9a\x66\xd9\x99\x03\xd2\x79\x1b\x7f\x03\x00\x00\xff\xff\x2a\x1a\xed\xba\xcc\x00\x00\x00")

func appPagesVersionsVersionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_appPagesVersionsVersionsHtml,
		"app/pages/versions/versions.html",
	)
}

func appPagesVersionsVersionsHtml() (*asset, error) {
	bytes, err := appPagesVersionsVersionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/versions/versions.html", size: 204, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appPagesVersionsVersionsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x31\x6f\xa3\x40\x10\x85\x7b\x7e\xc5\x93\xaf\x58\x90\xce\xf8\x07\x58\x5c\x63\x9d\x74\xc5\x25\x4d\xa2\x34\x96\x0b\xb2\x8c\xc5\x5a\xeb\x1d\x32\x3b\xd8\xb1\x2c\xfe\x7b\x04\x82\x18\x9a\x74\xb0\xf3\xbe\xf7\x76\x9e\xd6\xfa\x32\x46\xbc\x91\x44\xc7\x21\xe2\x9e\x00\x96\x43\x54\x69\xad\xb2\xa4\xd9\x70\x02\x68\xed\x62\x6e\xd9\xb7\xe7\x10\x51\x60\x6f\x9e\xcb\x33\x99\xdf\x30\x23\x69\x0e\x09\xd0\x25\x09\xe0\x82\xd3\x25\x76\x71\x74\x45\x81\x8a\x6d\x7b\xa6\xa0\xf9\x47\x4b\x72\x7b\x21\x4f\x43\x82\xf9\x75\x19\xc3\xd7\xde\x45\x5d\xbf\x73\x75\x33\xd9\x36\x19\xf8\x23\xa9\xad\xd3\xd5\xa6\x6c\xdc\x66\x92\xad\xb2\x61\x04\xe4\x5a\x53\x48\x85\x22\x8a\x3f\x10\x8a\xf9\x29\x72\x48\xb3\xe5\x78\xa2\x7a\xcd\x7d\x9c\xcc\xee\x95\xbb\x10\x48\xfe\xbd\x3e\xfd\x47\x01\x63\xb6\xdf\x8a\x23\x0b\xd2\xa1\x09\x34\xc2\x27\xb2\x0a\x3e\x62\x72\xcb\x66\x5e\x63\x61\x10\x5e\x6c\x69\x85\x4a\xa5\xbf\x9e\xfa\xbf\xd4\xa8\xf4\x4b\x3d\x98\x99\xbf\x65\xdf\x7b\xcf\x2b\x5e\xfa\x4f\x09\x96\xbc\xff\x29\xa2\x5a\x46\x60\x00\x72\xa5\x4f\xdd\x71\x50\x0a\x8a\x62\x5a\x66\x6f\xd9\x1f\x96\x62\xe1\x6b\x5e\x36\x0d\x85\x6a\x57\x3b\x5f\xa5\x3d\xbc\xf0\xeb\x66\xdf\x8f\x02\xe7\x88\xf0\x75\x46\x4c\xfa\x2e\x1b\xde\x46\xf7\x15\x00\x00\xff\xff\x74\xf8\xd8\x9a\x6b\x02\x00\x00")

func appPagesVersionsVersionsJsBytes() ([]byte, error) {
	return bindataRead(
		_appPagesVersionsVersionsJs,
		"app/pages/versions/versions.js",
	)
}

func appPagesVersionsVersionsJs() (*asset, error) {
	bytes, err := appPagesVersionsVersionsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/pages/versions/versions.js", size: 619, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreComponentJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x41\xaa\xc3\x30\x0c\x84\xe1\xbd\x4f\x31\xcb\xf7\xc0\xf4\x02\xc5\xab\x9e\x44\x38\x0e\x31\xc4\xb2\x88\x94\x45\x29\xb9\x7b\x91\x69\xa9\xb7\xff\x0c\x5f\xde\x49\x15\x8f\xde\xa4\x73\x61\xc3\x2b\x00\xb9\xb3\xda\x71\x66\xeb\xc7\x1f\x89\x44\x30\xb5\x12\xb1\x59\xdb\x23\x56\xf2\xfe\xfc\x1f\x4f\xc0\xb6\xaa\x37\xdf\x91\xc6\xed\xfe\xab\x24\x82\x04\x12\x99\x9a\x1b\x48\x83\x9a\xea\xc7\x44\xfa\xea\xd3\x56\x59\x8d\x38\xbb\x7f\xf2\x52\xd6\xca\x65\xf1\xf9\x0a\x57\x08\xef\x00\x00\x00\xff\xff\x83\xcb\xbd\x27\xbe\x00\x00\x00")

func coreComponentJsBytes() ([]byte, error) {
	return bindataRead(
		_coreComponentJs,
		"core/component.js",
	)
}

func coreComponentJs() (*asset, error) {
	bytes, err := coreComponentJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/component.js", size: 190, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreLoaderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x51\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\x7c\x6b\x27\x44\xfa\x00\x5b\x77\x41\x48\x1c\xca\x8d\x17\x88\x12\x8f\x5a\x0a\x4e\x94\x78\xa0\x09\xf5\xdd\x51\xd3\x74\x1d\x68\x9b\x40\xe2\xd6\x7e\x3f\xf6\xf7\x39\xc6\xe9\x94\xa0\xf3\xda\x62\x84\xcf\x15\x80\xf1\x9c\x24\x1e\x8c\xf8\x58\x1b\xcf\xa2\x89\x31\xae\x33\x05\xd0\x34\x90\xc4\x47\x84\xa0\x23\xb2\xc0\x49\x90\x59\xe9\x29\xa9\x13\x04\xed\x42\x6f\x56\xb3\xdd\x44\xd4\x82\xe0\xbc\xb6\xc4\xaf\x80\x0e\xdf\x90\x65\xb1\x17\xe2\x71\xc2\xa1\x05\xeb\xcd\x61\xfc\x54\x93\xb3\x10\x75\x65\xe9\xbd\x5a\x6f\xae\x19\x15\x59\x68\x7f\x04\x1a\xb1\x3b\xa8\xee\x5d\x2e\x5b\x5d\xf7\x26\x39\x3a\x54\x96\x52\x70\xfa\x08\x2d\x54\xec\x19\x6f\xe8\x89\x19\xe3\xd3\xcb\x73\x37\x6a\xb7\x61\xd7\x95\x72\x4a\xa9\x6d\x13\x76\xe7\xce\x25\x8c\x0e\x01\xd9\x3e\xf4\xe4\x6c\x7d\x61\xe8\xba\x9c\x2c\x53\xa9\xf7\x1f\x75\x2e\x3b\x8c\xe8\xf4\x5b\x9e\xe4\x57\x05\x88\x49\x48\xbb\x92\x64\xef\x23\xd4\x0e\x05\xcc\xb8\x1d\xfc\xfe\xe2\x90\x4c\x46\xe4\x79\x11\x4c\xf2\x9b\xd7\x19\xe6\x88\x3d\x59\xfc\x5b\xc4\xb3\x29\xff\x9c\xef\x7b\xf9\x29\xe2\xf0\x15\x00\x00\xff\xff\x4b\xf1\x32\x7c\xf8\x02\x00\x00")

func coreLoaderJsBytes() ([]byte, error) {
	return bindataRead(
		_coreLoaderJs,
		"core/loader.js",
	)
}

func coreLoaderJs() (*asset, error) {
	bytes, err := coreLoaderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/loader.js", size: 760, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreViewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\x10\x3a\xd4\x72\x53\x38\xbf\x5f\xaf\x81\xd1\xc3\x30\x60\x03\xda\xd3\x8a\x5d\x62\x1f\x3c\x85\x6d\xd4\x3a\x54\x66\x29\x6b\x8b\xc4\xdf\x7d\xa0\x63\xcb\x52\xfe\x00\xdd\x29\xb2\x48\x3e\x52\xef\xbd\x50\xd5\x95\xb5\xf0\x53\xe3\x1b\xec\x26\x00\xca\x90\x75\xcd\x56\x39\xd3\x48\xb3\x71\xda\x90\x4d\xbb\x00\x80\x5b\x69\x9b\x59\xac\x91\x83\x90\xc3\x10\x87\xab\x2b\xe8\x8f\x3e\x9c\xc2\x7e\x0f\xe2\x97\x59\x7e\x88\xf9\x58\xac\x0c\xb9\x4a\x13\x72\xf5\xd2\xa8\xed\x1a\xc9\x65\xbf\xb7\xd8\x7c\xfc\xe8\xeb\x64\xd4\x24\x8d\x6a\xd7\x1b\x43\x48\x0e\x72\xa0\x6d\x5d\x73\xa8\x9d\x4c\x00\x34\xbd\xa0\x72\xd2\xc7\xa3\x71\x7d\xc7\x4c\x13\x61\xf3\xed\xf1\xe1\x1e\x72\xf0\xb9\xd9\xca\xad\xeb\x0b\x4d\xfc\x39\x88\xd7\x9a\x5e\x65\x3f\x95\x7e\x82\xb1\x29\x73\x30\xa2\x6a\xb2\xae\x22\x85\x7c\x2b\x34\x69\x27\x40\xd3\x99\xf8\x30\x2a\x9c\x89\x65\x5c\x37\xf4\x6a\x87\xc7\xf2\x00\xdf\x7b\x85\x98\x70\xc9\x0f\x18\x60\x66\x33\xd8\xed\xe0\x89\x6e\x65\x0a\x6d\x3b\x39\xe0\x92\x75\xc0\x98\xcc\xf9\xac\xd8\x15\xbb\xc2\x5e\xcb\xec\xfa\x2e\xe5\xdf\x82\x4f\x45\xba\x4f\x8b\xb6\x68\x67\xcf\xf3\xe3\x9a\x87\xca\xa9\x15\x5a\xc8\x0f\x9f\x19\xbe\xa3\x3a\xb4\x1c\x39\x08\x13\xc3\x07\x31\xc8\x8b\xbd\xd7\xd4\xd5\x2f\xfa\x7b\x00\xe1\x9a\x0f\xd8\x89\x9b\xf1\xa2\x70\x87\xec\x90\xfd\x6a\xb3\xc9\x54\xa5\x56\xb8\xfc\x32\xdc\xda\x45\x22\x60\x7a\x24\x54\x46\xd5\x1a\x61\x0a\x22\x29\xe7\xe7\x30\xf1\x7d\xd3\x44\x8a\x7b\x7e\x19\x2b\x9c\x7d\xf1\x7f\xc9\x38\x21\x4a\x14\xbe\x2d\x03\xf8\x16\x14\x5f\x83\x64\x0d\x4f\xfb\x9a\x1a\x33\x6c\x1a\xd3\xc8\xe4\xa9\xd2\x35\x2e\xc1\x19\x60\xf2\xb6\x0e\x21\xb9\xd0\x39\x01\x13\x98\x04\xc6\xc7\xfa\x27\xde\x00\xa6\xd1\x2b\x5b\xd1\x9f\xcb\x79\x7f\x60\x71\x20\xef\x7e\xb2\x06\x37\x75\xa5\x30\x52\x68\xf1\x5f\x79\x33\xc8\x92\xbd\x18\x4d\x52\xcc\x0b\x12\x69\x60\x34\x80\x06\xdd\xb6\x21\x18\xfe\x1c\xde\x79\x5f\xff\xb0\x0c\xc7\x9e\x93\xaa\xd6\xea\x35\xcd\xc5\x1a\xdd\xca\x2c\x65\x2a\x02\x1b\x61\x57\xd2\x79\x4f\x2e\x8a\xb7\x72\x5a\xb0\xf1\x72\x36\xdf\x42\x24\xe5\x5d\x77\xd7\x9d\xd2\xd8\x7f\x5d\xe1\xe8\xbf\x03\xce\x89\x01\xbd\x0b\xc3\xf4\xd1\x85\xe7\xd8\xf0\xec\x85\x25\x4c\xcb\x48\xab\x21\x01\x53\xff\x79\x94\xc9\x62\x05\x31\x91\x17\xe2\xa2\x59\x83\xbc\x40\xc9\xb0\x3a\x29\x23\x47\x5e\x6a\x7a\x1b\x37\x4d\x44\xd2\x7f\x5d\xd4\xad\x67\xc7\x6b\x27\x07\x56\x6a\x74\x03\x2f\x47\x7f\xa5\x71\x19\x86\xf1\x63\xe1\xcf\x67\x9c\x2e\xa5\x60\x6d\x86\xbb\x37\x32\x95\x45\x5e\x34\x7d\x50\xf2\xb2\xfe\xec\x02\xef\x32\x4f\x71\x1e\xf1\xdd\x7d\x06\x87\xf3\xce\xe0\x3c\x47\xf3\x0c\x00\x3d\xad\x97\xe6\x39\xad\xee\xa6\xf8\xa7\xea\x76\xf2\x37\x00\x00\xff\xff\x0c\x51\x02\x3b\x88\x07\x00\x00")

func coreViewJsBytes() ([]byte, error) {
	return bindataRead(
		_coreViewJs,
		"core/view.js",
	)
}

func coreViewJs() (*asset, error) {
	bytes, err := coreViewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/view.js", size: 1928, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x31\x4f\xf3\x30\x10\x86\xf7\xfe\x8a\xfb\xfc\x0d\x01\x89\xd6\x7b\xb1\x23\xa1\xc2\x88\x40\x82\x85\xd1\x4d\xae\x8a\x5b\xc7\xb6\xec\x73\x4a\x85\xf8\xef\xc8\x75\x5a\x3a\xb0\x04\xa6\x5c\xee\x9e\xf7\xbd\x93\xcf\x16\xff\xee\x9f\x56\xaf\x6f\xcf\x0f\xd0\x51\x6f\xea\x99\x28\x1f\x00\xd1\xa1\x6a\x73\x00\x20\x8c\xb6\x3b\x08\x68\x24\x8b\x74\x30\x18\x3b\x44\x62\xd0\x05\xdc\x48\xc6\x4b\x8a\xb7\x2a\xec\xe6\xd4\x61\x8f\x8b\x26\x46\x06\x7c\x82\xb6\x57\xda\x4e\x57\x6d\x5c\xe8\xe3\x85\x4c\xf0\xd3\xc8\x62\xed\xda\x03\x1c\x31\x59\xb9\x01\xc3\xc6\xb8\xfd\x12\x54\x22\x57\x8d\x0d\x92\x01\xdd\x4a\x96\x3b\xcf\x7b\xb4\x89\x41\x63\x54\x8c\xb2\x5a\x27\x22\x67\xe7\x6b\x15\x4e\x28\x4f\xa6\x44\xe5\xb7\xd5\xc3\x51\x3a\x68\xdc\xb3\x5a\xf0\x56\x0f\x3f\x95\x23\x29\x4a\x31\xfb\x9c\xa1\x02\xc4\x26\x68\x4f\x40\x07\x8f\x92\x11\xbe\x13\xdf\xaa\x41\x95\x2c\x83\x18\x1a\xc9\x78\xe3\x02\xf2\xdc\x60\xb1\x8d\x59\x5e\xaa\xf5\x44\x83\xc6\xf5\xde\x59\xb4\xf4\x27\x17\xe3\x54\x8b\xe1\xb7\x16\xca\xfb\xb2\xde\xa9\xfa\xc2\x00\x28\xef\x41\x82\xc5\x3d\xdc\x79\x7f\xf5\x31\x66\x01\xb2\xe9\x23\xda\xf4\x82\x06\x1b\x72\x61\x09\xd5\xff\xf3\x36\xab\x9b\x33\x97\x4f\x71\xe5\x2c\x29\x6d\x31\x5c\xc2\xb9\x50\x8d\xd8\xe7\xf5\xed\xb8\xeb\xef\x01\x05\xcf\xb7\xa8\x9e\x09\x7e\x7c\x12\x5f\x01\x00\x00\xff\xff\xb2\x5f\x93\xdf\x29\x03\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 809, mode: os.FileMode(420), modTime: time.Unix(1635075171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stylesDarkThemeCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4f\x4f\xe3\x3e\x10\x3d\xd7\x9f\x62\x04\xfa\x89\xdf\xb2\xa4\xb4\xe9\x96\x16\x47\x68\x39\xec\x7d\x0f\x7b\x44\x1c\x9c\xda\x4d\x46\x38\xb6\x65\x1b\x08\xac\xf2\xdd\x57\x76\xfe\xb4\x09\xad\x72\xca\xf8\x79\x9e\xdf\xbc\x67\x3f\x62\x65\xb4\xf5\x70\x55\x7a\x6f\x1c\xbd\xbd\xdd\x6b\xe5\xdd\xbc\xd0\xba\x90\x82\x19\x74\xf3\x9d\xae\x6e\x77\xce\xfd\xdc\xb3\x0a\xe5\xc7\xc3\x6f\x23\xd4\xf7\x3f\x4c\xb9\xab\x8c\x90\x6b\xf8\x4b\x66\xc9\xbb\xc8\x5f\xd0\x27\xb9\xae\x13\x87\x9f\xa8\x0a\x0a\xb9\xb6\x5c\xd8\x50\xca\xc8\xec\xdc\x42\x43\x48\xae\xf9\x47\xe8\x11\x58\x93\x96\x81\xc2\x55\xe0\x80\xc8\x71\x03\x8e\x29\x97\x38\x61\x71\x9f\x91\x99\x44\x25\x92\x52\x60\x51\x7a\x0a\xcb\xf9\x66\x2d\xaa\xac\xdb\xec\xf0\x53\x50\x58\xde\x99\xc8\xc8\x76\x2f\x85\xd5\xaf\x8a\x27\x3b\x2d\xb5\xa5\x70\x99\xa6\x69\x46\x66\xfd\x1f\x63\x2c\xf2\xcf\x1d\x56\x46\x8a\x64\xa7\x95\x67\xa8\x84\x0d\x87\xa9\x58\x9d\xbc\x23\xf7\x25\x85\xbb\xcd\x3a\x36\xac\x98\x2d\x50\x51\x58\x00\x7b\xf5\x3a\x23\x33\xc3\x38\x47\x55\x24\x5e\x1b\x0a\x9b\x45\x04\xf5\xb5\x5c\x7b\xaf\x2b\x0a\x69\x2c\x1f\xb1\x18\x8b\xca\x47\xb9\x28\x25\x85\xf7\x12\xbd\xc8\xc8\xcc\x79\xab\x5f\xc4\xf0\xdf\x4c\xf0\xee\xad\x08\x7b\x06\xd9\x8b\xc5\x7f\xe3\xb3\x4b\xed\x44\x40\x74\xe2\xfa\xb6\xdd\xa8\xc7\xd5\xa3\x7d\xa2\xf6\x09\xaa\xbd\x0e\x5b\x3b\x6c\x54\xb3\x34\x35\x38\x2d\x91\x1f\xc6\x64\x06\x8f\x8e\xc7\xdc\x10\x52\x2e\x27\x2b\xab\x76\x14\x23\xa3\x56\x3f\x7a\x74\x3a\x41\xa7\x27\xd0\xe9\xba\x47\xaf\x4e\xb2\x4e\xd0\x9b\xd1\xe8\x5b\x01\xeb\x93\x76\x74\xe5\x21\x81\x5d\xf5\xa0\xf6\xd7\x36\x7c\xd9\xd9\x69\xf4\xeb\xe1\x6c\x76\x64\xc9\xb9\xd0\xf1\x6d\xf8\x86\x8e\x14\x94\x56\xc1\x9a\x2e\x5d\xad\x95\x87\x70\x75\xc2\xd9\x53\x69\xc5\xfe\xf9\xc8\xd2\xcb\xa5\xd8\x32\x7e\x77\xbc\x4a\x4b\xfd\xd6\xc6\xb5\xc7\xac\x72\xb6\x10\x2d\x06\xab\x62\x12\xe4\x21\x35\x12\xc3\xca\xe4\x22\xc5\x7b\x14\x7a\x3b\xe4\xe2\x86\x3c\xed\x24\x73\x0e\xae\x1f\xe0\x22\x14\x72\x66\x2f\x9e\x6f\xc8\x13\xf2\x71\x69\x42\x71\x3f\x16\xd3\xdf\x94\x5e\xfa\x61\x90\x32\xd0\x16\x56\x7c\x1c\x4c\xa2\xb0\x36\x75\xe7\x50\x43\xc8\x63\x25\x38\x32\xf8\xbf\x42\x35\x08\xb8\x4f\x97\xa6\xfe\xd6\x86\xb5\x7d\x34\x46\xd9\xd8\x46\x0f\x9a\xf8\xa8\xbc\x7a\xaf\x55\x44\x9e\x79\x07\x00\xbe\x9e\xaa\x0d\xfb\x97\x17\xa2\x6d\x36\x4c\x1b\xe0\x44\xcf\x88\x3d\xd9\xb3\x63\x1b\x91\x37\xff\x02\x00\x00\xff\xff\xba\x12\xe6\xc3\x74\x05\x00\x00")

func stylesDarkThemeCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesDarkThemeCss,
		"styles/dark-theme.css",
	)
}

func stylesDarkThemeCss() (*asset, error) {
	bytes, err := stylesDarkThemeCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles/dark-theme.css", size: 1396, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stylesFormsCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xcf\x6a\xe3\x30\x10\xc6\xef\x7a\x8a\xef\x92\x8b\x37\xc6\x86\xec\x61\x71\x9e\x60\x61\x61\xfb\x0a\x92\x35\xb6\x87\xca\x52\x90\x46\xa4\xa1\xf4\xdd\x8b\xe4\xa6\x36\xd4\x47\xcd\x7c\x7f\x7e\xe3\x29\xc4\x15\xef\x0a\xb8\xb3\x95\x65\xc0\x9f\xfe\x74\x55\xc0\xaa\xe3\xcc\x7e\x40\x0f\x9d\x25\x5c\xd5\x87\x52\x4e\x1b\x72\x67\xc5\xfe\x96\xa5\x2a\xba\x06\x7f\x3d\x42\xb4\x14\x21\x01\x96\x26\xf6\xb4\xf9\x24\x34\x9d\x02\x2c\xa7\x9b\xd3\x8f\x01\xec\x1d\x7b\x6a\x8d\x0b\xe3\xeb\x6e\x76\xcc\xbd\x6c\xb9\x5d\x83\x97\x90\x58\x38\xf8\x04\x59\x08\xdb\xa2\xd0\x9b\xc0\x50\x62\x4b\xf5\x75\x2b\x51\x33\xca\xa8\xd5\x8e\x67\x3f\x20\xf2\xbc\xc8\xee\xff\x6b\xef\xfa\x23\xe5\x9f\x8e\x33\x7d\x61\xb6\x55\x57\x18\xa6\x10\xc7\x2d\xc1\x97\x44\x72\xb4\x92\xaf\x93\xed\xed\xde\x16\x0e\x85\xfd\xd3\xde\x3e\x5d\x1c\x4d\x75\x75\x8c\xa4\x85\xa0\x31\x67\x11\x8a\x30\x24\x77\x22\x7f\xc0\x29\xa2\x03\xc2\x7e\xec\x4b\x7f\x42\x8f\xdf\xa7\xca\xa0\xba\x06\xff\xbd\x7b\x54\x61\xca\x66\x65\x81\xc9\x22\xc1\x83\x13\x56\x2d\xe3\x42\x16\xa6\xcc\x39\x21\x91\xa3\x51\x42\x3c\x3f\xdb\x99\x5c\xdb\x98\xa2\x8d\x84\x47\xc8\x18\x43\x76\x16\x39\x11\xb4\x07\x5b\x84\x88\xd1\xe9\x94\x0a\x37\x64\xd1\xdf\xfe\x4d\xa7\xb6\x1f\x7d\x38\xe1\xe4\x82\x96\xfd\xc6\x9f\x01\x00\x00\xff\xff\xca\x44\x66\xc0\x39\x02\x00\x00")

func stylesFormsCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesFormsCss,
		"styles/forms.css",
	)
}

func stylesFormsCss() (*asset, error) {
	bytes, err := stylesFormsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles/forms.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stylesMainCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcd\x6e\xf3\x30\x0c\xbb\xe7\x29\x04\x7c\xf8\x6e\xf3\xd0\xfd\x5c\xe6\x3c\x8d\x1d\xab\x89\x00\x47\x0a\x14\xb5\x4e\x36\xf4\xdd\x87\xc4\x29\x50\x14\x3b\x92\xa2\x28\x9a\x8e\x92\xd6\x17\x18\x6c\xcc\xf0\xd3\x00\x0c\x48\xfd\x60\x1e\xde\x4e\xa7\xeb\xd0\x36\x00\x85\x92\x0d\x15\x97\x0d\x8f\x41\x7b\x62\x0f\xa7\x0d\x4c\x21\x25\xe2\xfe\x40\x72\x45\x3d\x67\x29\x1e\x06\x4a\x09\xb9\x6d\x6e\x4d\xf3\xef\x4a\x58\x9e\xad\xff\x3f\x38\x7f\x3d\x19\x87\x8b\xc9\xbe\xf9\xda\x09\x5b\x20\x46\xdd\xd7\x13\xcd\x53\x0e\xab\x87\x73\xc6\x25\xca\x72\x68\x82\xa6\x7d\xbc\xb1\x2e\x91\x62\x67\x24\xec\x41\xa5\x54\x85\x91\x65\xac\x12\x61\x73\x33\x7d\xa3\x87\xf7\xcf\x69\x69\xef\x54\x39\x82\x45\xc9\x69\x23\x0d\x17\x73\x09\x3b\xd1\x50\xbd\x2e\x9c\x50\x33\x31\x6e\xd3\x28\x8b\x0b\x99\x7a\xf6\xd0\x21\x1b\xea\x43\x11\x2e\x8a\x99\x8c\x1e\x3e\x14\xc7\x7a\x3e\x5e\xcc\x84\x5d\x0c\x7f\xbc\xa2\xbd\xe7\xae\xad\xa9\x14\x28\x1a\xa6\x8d\xce\x34\x9b\x9b\x6d\xcd\xe8\x6c\x9d\xd0\x03\xcb\x76\xfe\xd6\x34\x67\xc2\x9c\x66\xb4\xdd\x2e\x8a\x26\xd4\xbd\xff\xc7\x51\x0e\x11\xeb\x7f\x8e\xc4\xee\x28\xfa\xc8\xf4\x1b\x00\x00\xff\xff\x22\xb1\xc4\xea\xf1\x01\x00\x00")

func stylesMainCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesMainCss,
		"styles/main.css",
	)
}

func stylesMainCss() (*asset, error) {
	bytes, err := stylesMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles/main.css", size: 497, mode: os.FileMode(420), modTime: time.Unix(1635003321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/main.js":                      appMainJs,
	"app/pages/home/home.html":         appPagesHomeHomeHtml,
	"app/pages/home/home.js":           appPagesHomeHomeJs,
	"app/pages/projects/projects.html": appPagesProjectsProjectsHtml,
	"app/pages/projects/projects.js":   appPagesProjectsProjectsJs,
	"app/pages/releases/releases.html": appPagesReleasesReleasesHtml,
	"app/pages/releases/releases.js":   appPagesReleasesReleasesJs,
	"app/pages/versions/versions.html": appPagesVersionsVersionsHtml,
	"app/pages/versions/versions.js":   appPagesVersionsVersionsJs,
	"core/component.js":                coreComponentJs,
	"core/loader.js":                   coreLoaderJs,
	"core/view.js":                     coreViewJs,
	"index.html":                       indexHtml,
	"styles/dark-theme.css":            stylesDarkThemeCss,
	"styles/forms.css":                 stylesFormsCss,
	"styles/main.css":                  stylesMainCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"main.js": &bintree{appMainJs, map[string]*bintree{}},
		"pages": &bintree{nil, map[string]*bintree{
			"home": &bintree{nil, map[string]*bintree{
				"home.html": &bintree{appPagesHomeHomeHtml, map[string]*bintree{}},
				"home.js":   &bintree{appPagesHomeHomeJs, map[string]*bintree{}},
			}},
			"projects": &bintree{nil, map[string]*bintree{
				"projects.html": &bintree{appPagesProjectsProjectsHtml, map[string]*bintree{}},
				"projects.js":   &bintree{appPagesProjectsProjectsJs, map[string]*bintree{}},
			}},
			"releases": &bintree{nil, map[string]*bintree{
				"releases.html": &bintree{appPagesReleasesReleasesHtml, map[string]*bintree{}},
				"releases.js":   &bintree{appPagesReleasesReleasesJs, map[string]*bintree{}},
			}},
			"versions": &bintree{nil, map[string]*bintree{
				"versions.html": &bintree{appPagesVersionsVersionsHtml, map[string]*bintree{}},
				"versions.js":   &bintree{appPagesVersionsVersionsJs, map[string]*bintree{}},
			}},
		}},
	}},
	"core": &bintree{nil, map[string]*bintree{
		"component.js": &bintree{coreComponentJs, map[string]*bintree{}},
		"loader.js":    &bintree{coreLoaderJs, map[string]*bintree{}},
		"view.js":      &bintree{coreViewJs, map[string]*bintree{}},
	}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"styles": &bintree{nil, map[string]*bintree{
		"dark-theme.css": &bintree{stylesDarkThemeCss, map[string]*bintree{}},
		"forms.css":      &bintree{stylesFormsCss, map[string]*bintree{}},
		"main.css":       &bintree{stylesMainCss, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
